{"version":3,"file":"gamepush-unity.js","mappings":"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","sources":["webpack://gamepush_unity/./src/GamePushUnity.js","webpack://gamepush_unity/./src/index.js"],"sourcesContent":["export default class GamePushUnity {\n    constructor(gp) {\n        this.gp = gp;\n\n        this.gp.player.on('change', () => this.trigger('CallPlayerChange'));\n        this.gp.player.on('sync', (success) => {\n            this.trigger(\n                success ? 'CallPlayerSyncComplete' : 'CallPlayerSyncError'\n            );\n        });\n        this.gp.player.on('load', (success) => {\n            this.trigger(\n                success ? 'CallPlayerLoadComplete' : 'CallPlayerLoadError'\n            );\n        });\n        this.gp.player.on('login', (success) => {\n            this.trigger(\n                success ? 'CallPlayerLoginComplete' : 'CallPlayerLoginError'\n            );\n        });\n\n        this.gp.on('event:connect', () => this.trigger('CallPlayerConnect'));\n\n        this.gp.player.on('fetchFields', (success) => {\n            if (success) {\n                this.trigger(\n                    'CallPlayerFetchFieldsComplete',\n                    JSON.stringify(\n                        this.gp.player.fields.map((field) => ({\n                            ...field,\n                            defaultValue: field.default\n                        }))\n                    )\n                );\n            } else {\n                this.trigger('CallPlayerFetchFieldsError');\n            }\n        });\n\n        // leaderboard\n        this.gp.leaderboard.on('open', () =>\n            this.trigger('CallLeaderboardOpen')\n        );\n        this.gp.leaderboard.on('close', () =>\n            this.trigger('CallLeaderboardClose')\n        );\n\n        // achievements\n        this.gp.achievements.on('open', () =>\n            this.trigger('CallAchievementsOpen')\n        );\n        this.gp.achievements.on('close', () => {\n            this.trigger('CallAchievementsClose');\n            window.focus();\n        });\n\n        this.gp.achievements.on('unlock', (achievement) =>\n            this.trigger('CallAchievementsUnlock', achievement)\n        );\n        this.gp.achievements.on('error:unlock', (error) =>\n            this.trigger('CallAchievementsUnlockError', error)\n        );\n\n        // games collections\n        this.gp.gamesCollections.on('open', () =>\n            this.trigger('CallGamesCollectionsOpen')\n        );\n        this.gp.gamesCollections.on('close', () => {\n            this.trigger('CallGamesCollectionsClose');\n            window.focus();\n        });\n\n        // fullscreen\n        this.gp.fullscreen.on('open', () => this.trigger('CallFullscreenOpen'));\n        this.gp.fullscreen.on('close', () =>\n            this.trigger('CallFullscreenClose')\n        );\n        this.gp.fullscreen.on('change', () =>\n            this.trigger('CallFullscreenChange')\n        );\n\n        // ads\n        this.gp.ads.on('start', () => this.trigger('CallAdsStart'));\n        this.gp.ads.on('close', (success) => {\n            this.trigger('CallAdsClose', success);\n            window.focus();\n        });\n\n        this.gp.ads.on('fullscreen:start', () =>\n            this.trigger('CallAdsFullscreenStart')\n        );\n        this.gp.ads.on('fullscreen:close', (success) =>\n            this.trigger('CallAdsFullscreenClose', success)\n        );\n\n        this.gp.ads.on('preloader:start', () =>\n            this.trigger('CallAdsPreloaderStart')\n        );\n        this.gp.ads.on('preloader:close', (success) =>\n            this.trigger('CallAdsPreloaderClose', success)\n        );\n\n        this.gp.ads.on('rewarded:start', () =>\n            this.trigger('CallAdsRewardedStart')\n        );\n        this.gp.ads.on('rewarded:close', (success) =>\n            this.trigger('CallAdsRewardedClose', success)\n        );\n        this.gp.ads.on('rewarded:reward', () =>\n            this.trigger('CallAdsRewardedReward', this.lastRewardedTag)\n        );\n\n        this.gp.ads.on('sticky:start', () =>\n            this.trigger('CallAdsStickyStart')\n        );\n        this.gp.ads.on('sticky:close', () =>\n            this.trigger('CallAdsStickyClose')\n        );\n        this.gp.ads.on('sticky:refresh', () =>\n            this.trigger('CallAdsStickyRefresh')\n        );\n        this.gp.ads.on('sticky:render', () =>\n            this.trigger('CallAdsStickyRender')\n        );\n\n        // socials\n        this.gp.socials.on('share', (success) => {\n            this.trigger('CallSocialsShare', success);\n            window.focus();\n        });\n        this.gp.socials.on('post', (success) => {\n            this.trigger('CallSocialsPost', success);\n            window.focus();\n        });\n        this.gp.socials.on('invite', (success) => {\n            this.trigger('CallSocialsInvite', success);\n            window.focus();\n        });\n        this.gp.socials.on('joinCommunity', (success) => {\n            this.trigger('CallSocialsJoinCommunity', success);\n            window.focus();\n        });\n\n        // gp\n        this.gp.on('change:language', (lang) =>\n            this.trigger('CallChangeLanguage', lang)\n        );\n        this.gp.on('change:avatarGenerator', (ag) =>\n            this.trigger('CallChangeAvatarGenerator', ag)\n        );\n        this.gp.on('pause', () => this.trigger('CallOnPause'));\n        this.gp.on('resume', () => this.trigger('CallOnResume'));\n\n        //device\n        this.gp.on('change:orientation', () =>\n            this.trigger('CallChangeOrientation')\n        );\n\n        // app\n        //this.gp.app.on('requestReview', (result) => this.trigger('CallReviewResult', result));\n        //this.gp.app.on('addShortcut', (success) => this.trigger('CallAddShortcut', success));\n\n        //documents\n        this.gp.documents.on('open', () => this.trigger('CallOnDocumentsOpen'));\n        this.gp.documents.on('close', () => {\n            this.trigger('CallOnDocumentsClose');\n            window.focus();\n        });\n\n        this.gp.documents.on('fetch', (document) =>\n            this.trigger('CallOnDocumentsFetchSuccess', document.content)\n        );\n        this.gp.documents.on('error:fetch', () =>\n            this.trigger('CallOnDocumentsFetchError')\n        );\n\n        // channels\n        this.gp.channels.on('createChannel', (channel) => {\n            this.trigger(\n                'CallOnCreateChannel',\n                JSON.stringify(mapChannel(channel))\n            );\n        });\n        this.gp.channels.on('error:createChannel', (err) =>\n            this.trigger('CallOnCreateChannelError')\n        );\n\n        this.gp.channels.on('updateChannel', (channel) => {\n            this.trigger(\n                'CallOnUpdateChannel',\n                JSON.stringify(mapChannel(channel))\n            );\n        });\n        this.gp.channels.on('error:updateChannel', (err) =>\n            this.trigger('CallOnUpdateChannelError')\n        );\n\n        this.gp.channels.on('deleteChannel', () =>\n            this.trigger('CallOnDeleteChannelSuccess')\n        );\n        this.gp.channels.on('event:deleteChannel', (channel) => {\n            this.trigger('CallOnDeleteChannelEvent', channel.id);\n        });\n        this.gp.channels.on('error:deleteChannel', (err) =>\n            this.trigger('CallOnDeleteChannelError')\n        );\n\n        this.gp.channels.on('fetchChannel', (channel) => {\n            this.trigger(\n                'CallOnFetchChannel',\n                JSON.stringify(mapChannel(channel))\n            );\n        });\n        this.gp.channels.on('error:fetchChannel', (err) =>\n            this.trigger('CallOnFetchChannelError')\n        );\n\n        this.gp.channels.on('fetchChannels', (result) => {\n            this.trigger('CallOnFetchChannelsCanLoadMore', result.canLoadMore);\n            this.trigger(\n                'CallOnFetchChannels',\n                JSON.stringify(result.items.map(mapChannel))\n            );\n        });\n        this.gp.channels.on('error:fetchChannels', (err) =>\n            this.trigger('CallOnFetchChannelsError')\n        );\n\n        this.gp.channels.on('fetchMoreChannels', (result) => {\n            this.trigger(\n                'CallOnFetchMoreChannelsCanLoadMore',\n                result.canLoadMore\n            );\n            this.trigger(\n                'CallOnFetchMoreChannels',\n                JSON.stringify(result.items.map(mapChannel))\n            );\n        });\n        this.gp.channels.on('error:fetchMoreChannels', (err) =>\n            this.trigger('CallOnFetchMoreChannelsError')\n        );\n\n        this.gp.channels.on('openChat', () => this.trigger('CallOnOpenChat'));\n        this.gp.channels.on('closeChat', () => this.trigger('CallOnCloseChat'));\n        this.gp.channels.on('error:openChat', (err) =>\n            this.trigger('CallOnOpenChatError')\n        );\n\n        this.gp.channels.on('join', () => this.trigger('CallOnJoinSuccess'));\n        this.gp.channels.on('event:join', (member) => {\n            this.trigger('CallOnJoinEvent', JSON.stringify(member));\n        });\n        this.gp.channels.on('error:join', (err) =>\n            this.trigger('CallOnJoinError')\n        );\n\n        this.gp.channels.on('event:joinRequest', (joinRequest) => {\n            this.trigger('CallOnJoinRequest', JSON.stringify(joinRequest));\n        });\n\n        this.gp.channels.on('cancelJoin', () =>\n            this.trigger('CallOnCancelJoinSuccess')\n        );\n        this.gp.channels.on('event:cancelJoin', (joinRequest) => {\n            this.trigger('CallOnCancelJoinEvent', JSON.stringify(joinRequest));\n        });\n        this.gp.channels.on('error:cancelJoin', (err) =>\n            this.trigger('CallOnCancelJoinError')\n        );\n\n        this.gp.channels.on('leave', () => this.trigger('CallOnLeaveSuccess'));\n        this.gp.channels.on('event:leave', (memberLeave) => {\n            this.trigger('CallOnLeaveEvent', JSON.stringify(memberLeave));\n        });\n        this.gp.channels.on('error:leave', (err) =>\n            this.trigger('CallOnLeaveError')\n        );\n\n        this.gp.channels.on('kick', () => this.trigger('CallOnKick'));\n        this.gp.channels.on('error:kick', (err) =>\n            this.trigger('CallOnKickError')\n        );\n\n        this.gp.channels.on('fetchMembers', (result) => {\n            this.trigger('CallOnFetchMembersCanLoadMore', result.canLoadMore);\n            this.trigger('CallOnFetchMembers', JSON.stringify(result.items));\n        });\n        this.gp.channels.on('error:fetchMembers', (err) =>\n            this.trigger('CallOnFetchMembersError')\n        );\n\n        this.gp.channels.on('fetchMoreMembers', (result) => {\n            this.trigger(\n                'CallOnFetchMoreMembersCanLoadMore',\n                result.canLoadMore\n            );\n            this.trigger(\n                'CallOnFetchMoreMembers',\n                JSON.stringify(result.items)\n            );\n        });\n        this.gp.channels.on('error:fetchMoreMembers', (err) =>\n            this.trigger('CallOnFetchMoreMembersError')\n        );\n\n        this.gp.channels.on('mute', () => this.trigger('CallOnMuteSuccess'));\n        this.gp.channels.on('event:mute', (mute) => {\n            this.trigger('CallOnMuteEvent', JSON.stringify(mute));\n        });\n        this.gp.channels.on('error:mute', (err) =>\n            this.trigger('CallOnMuteError')\n        );\n\n        this.gp.channels.on('unmute', () =>\n            this.trigger('CallOnUnmuteSuccess')\n        );\n        this.gp.channels.on('event:unmute', (mute) => {\n            this.trigger('CallOnUnmuteEvent', JSON.stringify(mute));\n        });\n        this.gp.channels.on('error:unmute', (err) =>\n            this.trigger('CallOnUnmuteError')\n        );\n\n        this.gp.channels.on('sendInvite', () =>\n            this.trigger('CallOnSendInvite')\n        );\n        this.gp.channels.on('error:sendInvite', (err) =>\n            this.trigger('CallOnSendInviteError')\n        );\n\n        this.gp.channels.on('event:invite', (invite) => {\n            this.trigger('CallOnInvite', JSON.stringify(invite));\n        });\n\n        this.gp.channels.on('cancelInvite', () =>\n            this.trigger('CallOnCancelInviteSuccess')\n        );\n        this.gp.channels.on('event:cancelInvite', (invite) => {\n            this.trigger('CallOnCancelInviteEvent', JSON.stringify(invite));\n        });\n        this.gp.channels.on('error:cancelInvite', (err) =>\n            this.trigger('CallOnCancelInviteError')\n        );\n\n        this.gp.channels.on('acceptInvite', () =>\n            this.trigger('CallOnAcceptInvite')\n        );\n        this.gp.channels.on('error:acceptInvite', (err) =>\n            this.trigger('CallOnAcceptInviteError')\n        );\n\n        this.gp.channels.on('rejectInvite', () =>\n            this.trigger('CallOnRejectInviteSuccess')\n        );\n        this.gp.channels.on('event:rejectInvite', (invite) => {\n            this.trigger('CallOnRejectInviteEvent', JSON.stringify(invite));\n        });\n        this.gp.channels.on('error:rejectInvite', (err) =>\n            this.trigger('CallOnRejectInviteError')\n        );\n\n        this.gp.channels.on('fetchInvites', (result) => {\n            this.trigger('CallOnFetchInvitesCanLoadMore', result.canLoadMore);\n            this.trigger(\n                'CallOnFetchInvites',\n                JSON.stringify(result.items.map(mapItemWithChannel))\n            );\n        });\n        this.gp.channels.on('error:fetchInvites', (err) =>\n            this.trigger('CallOnFetchInvitesError')\n        );\n\n        this.gp.channels.on('fetchMoreInvites', (result) => {\n            this.trigger(\n                'CallOnFetchMoreInvitesCanLoadMore',\n                result.canLoadMore\n            );\n            this.trigger(\n                'CallOnFetchMoreInvites',\n                JSON.stringify(result.items.map(mapItemWithChannel))\n            );\n        });\n        this.gp.channels.on('error:fetchMoreInvites', (err) =>\n            this.trigger('CallOnFetchMoreInvitesError')\n        );\n\n        this.gp.channels.on('fetchChannelInvites', (result) => {\n            this.trigger(\n                'CallOnFetchChannelInvitesCanLoadMore',\n                result.canLoadMore\n            );\n            this.trigger(\n                'CallOnFetchChannelInvites',\n                JSON.stringify(result.items)\n            );\n        });\n        this.gp.channels.on('error:fetchChannelInvites', (err) =>\n            this.trigger('CallOnFetchChannelInvitesError')\n        );\n\n        this.gp.channels.on('fetchMoreChannelInvites', (result) => {\n            this.trigger(\n                'CallOnFetchMoreChannelInvitesCanLoadMore',\n                result.canLoadMore\n            );\n            this.trigger(\n                'CallOnFetchMoreChannelInvites',\n                JSON.stringify(result.items)\n            );\n        });\n        this.gp.channels.on('error:fetchMoreChannelInvites', (err) =>\n            this.trigger('CallOnFetchMoreChannelInvitesError')\n        );\n\n        this.gp.channels.on('fetchSentInvites', (result) => {\n            this.trigger(\n                'CallOnFetchSentInvitesCanLoadMore',\n                result.canLoadMore\n            );\n            this.trigger(\n                'CallOnFetchSentInvites',\n                JSON.stringify(result.items.map(mapItemWithChannel))\n            );\n        });\n        this.gp.channels.on('error:fetchSentInvites', (err) =>\n            this.trigger('CallOnFetchSentInvitesError')\n        );\n\n        this.gp.channels.on('fetchMoreSentInvites', (result) => {\n            this.trigger(\n                'CallOnFetchMoreSentInvitesCanLoadMore',\n                result.canLoadMore\n            );\n            this.trigger(\n                'CallOnFetchMoreSentInvites',\n                JSON.stringify(result.items.map(mapItemWithChannel))\n            );\n        });\n        this.gp.channels.on('error:fetchMoreSentInvites', (err) =>\n            this.trigger('CallOnFetchMoreSentInvitesError')\n        );\n\n        this.gp.channels.on('acceptJoinRequest', () =>\n            this.trigger('CallOnAcceptJoinRequest')\n        );\n        this.gp.channels.on('error:acceptJoinRequest', (err) =>\n            this.trigger('CallOnAcceptJoinRequestError')\n        );\n\n        this.gp.channels.on('rejectJoinRequest', () =>\n            this.trigger('CallOnRejectJoinRequestSuccess')\n        );\n        this.gp.channels.on('event:rejectJoinRequest', (joinRequest) => {\n            this.trigger(\n                'CallOnRejectJoinRequestEvent',\n                JSON.stringify(joinRequest)\n            );\n        });\n        this.gp.channels.on('error:rejectJoinRequest', (err) =>\n            this.trigger('CallOnRejectJoinRequestError')\n        );\n\n        this.gp.channels.on('fetchJoinRequests', (result) => {\n            this.trigger(\n                'CallOnFetchJoinRequestsCanLoadMore',\n                result.canLoadMore\n            );\n            this.trigger(\n                'CallOnFetchJoinRequests',\n                JSON.stringify(result.items)\n            );\n        });\n        this.gp.channels.on('error:fetchJoinRequests', (err) =>\n            this.trigger('CallOnFetchJoinRequestsError')\n        );\n\n        this.gp.channels.on('fetchMoreJoinRequests', (result) => {\n            this.trigger(\n                'CallOnFetchMoreJoinRequestsCanLoadMore',\n                result.canLoadMore\n            );\n            this.trigger(\n                'CallOnFetchMoreJoinRequests',\n                JSON.stringify(result.items)\n            );\n        });\n        this.gp.channels.on('error:fetchMoreJoinRequests', (err) =>\n            this.trigger('CallOnFetchMoreJoinRequestsError')\n        );\n\n        this.gp.channels.on('fetchSentJoinRequests', (result) => {\n            this.trigger(\n                'CallOnFetchSentJoinRequestsCanLoadMore',\n                result.canLoadMore\n            );\n            this.trigger(\n                'CallOnFetchSentJoinRequests',\n                JSON.stringify(result.items.map(mapItemWithChannel))\n            );\n        });\n        this.gp.channels.on('error:fetchSentJoinRequests', (err) =>\n            this.trigger('CallOnFetchSentJoinRequestsError')\n        );\n\n        this.gp.channels.on('fetchMoreSentJoinRequests', (result) => {\n            this.trigger(\n                'CallOnFetchMoreSentJoinRequestsCanLoadMore',\n                result.canLoadMore\n            );\n            this.trigger(\n                'CallOnFetchMoreSentJoinRequests',\n                JSON.stringify(result.items.map(mapItemWithChannel))\n            );\n        });\n        this.gp.channels.on('error:fetchMoreSentJoinRequests', (err) =>\n            this.trigger('CallOnFetchMoreSentJoinRequestsError')\n        );\n\n        this.gp.channels.on('sendMessage', (message) => {\n            this.trigger('CallOnSendMessage', JSON.stringify(message));\n        });\n        this.gp.channels.on('error:sendMessage', (err) =>\n            this.trigger('CallOnSendMessageError')\n        );\n\n        this.gp.channels.on('event:message', (message) => {\n            this.trigger('CallOnMessage', JSON.stringify(message));\n        });\n\n        this.gp.channels.on('editMessage', (message) => {\n            this.trigger('CallOnEditMessageSuccess', JSON.stringify(message));\n        });\n        this.gp.channels.on('event:editMessage', (message) => {\n            this.trigger('CallOnEditMessageEvent', JSON.stringify(message));\n        });\n        this.gp.channels.on('error:editMessage', (err) =>\n            this.trigger('CallOnEditMessageError')\n        );\n\n        this.gp.channels.on('deleteMessage', () =>\n            this.trigger('CallOnDeleteMessageSuccess')\n        );\n        this.gp.channels.on('event:deleteMessage', (message) => {\n            this.trigger('CallOnDeleteMessageEvent', JSON.stringify(message));\n        });\n        this.gp.channels.on('error:deleteMessage', (err) =>\n            this.trigger('CallOnDeleteMessageError')\n        );\n\n        //triggers\n        this.gp.triggers.on('activate', ({ trigger }) => {\n            this.trigger('CallOnTriggerActivate', JSON.stringify(trigger));\n        });\n        this.gp.triggers.on('claim', ({ trigger }) => {\n            this.trigger('CallOnTriggerClaim', JSON.stringify(trigger));\n        });\n        this.gp.triggers.on('error:claim', (err) => {\n            this.trigger('CallOnTriggerClaimError', JSON.stringify(err));\n        });\n\n        //events\n        this.gp.events.on('join', ({ event, playerEvent }) => {\n            this.trigger('CallOnEventJoin', JSON.stringify(playerEvent));\n        });\n        this.gp.events.on('error:join', (err) => {\n            this.trigger('CallOnEventJoinError', err);\n        });\n\n        //segments\n        this.gp.segments.on('enter', (segmentTag) => {\n            this.trigger('CallOnSegmentEnter', segmentTag);\n        });\n        this.gp.segments.on('leave', (segmentTag) => {\n            this.trigger('CallOnSegmentLeave', segmentTag);\n        });\n\n        //rewards\n        //this.gp.rewards.on('give', ({ reward, playerReward }) => {this.trigger('CallOnRewardsGive', JSON.stringify({ reward, playerReward })); });\n        //this.gp.rewards.on('error:give', (err) => {this.trigger('CallOnRewardsGiveError', err); });\n        //this.gp.rewards.on('accept', ({ reward, playerReward }) => {this.trigger('CallOnRewardsAccept', JSON.stringify({ reward, playerReward })); });\n        //this.gp.rewards.on('error:accept', (err) => {this.trigger('CallOnRewardsAcceptError', err);  });\n\n        //Schedulers\n        this.gp.schedulers.on('register', (schedulerInfo) => {\n            this.trigger(\n                'CallOnSchedulerRegister',\n                JSON.stringify(schedulerInfo)\n            );\n        });\n        this.gp.schedulers.on('error:register', (err) => {\n            this.trigger('CallOnSchedulerRegisterError', err);\n        });\n        this.gp.schedulers.on('claimDay', (schedulerDayInfo) => {\n            this.trigger(\n                'CallOnSchedulerClaimDay',\n                JSON.stringify(schedulerDayInfo)\n            );\n        });\n        this.gp.schedulers.on('error:claimDay', (err) => {\n            this.trigger('CallOnSchedulerClaimDayError', err);\n        });\n        this.gp.schedulers.on('claimDayAdditional', (schedulerDayInfo) => {\n            this.trigger(\n                'CallOnSchedulerClaimDayAdditional',\n                JSON.stringify(schedulerDayInfo)\n            );\n        });\n        this.gp.schedulers.on('error:claimDayAdditional', (err) => {\n            this.trigger('CallOnSchedulerClaimDayAdditionalError', err);\n        });\n        this.gp.schedulers.on('claimAllDay', (schedulerDayInfo) => {\n            this.trigger(\n                'CallOnSchedulerClaimAllDay',\n                JSON.stringify(schedulerDayInfo)\n            );\n        });\n        this.gp.schedulers.on('error:claimAllDay', (err) => {\n            this.trigger('CallOnSchedulerClaimAllDayError', err);\n        });\n        this.gp.schedulers.on('claimAllDays', (schedulerDayInfo) => {\n            this.trigger(\n                'CallOnSchedulerClaimAllDays',\n                JSON.stringify(schedulerDayInfo)\n            );\n        });\n        this.gp.schedulers.on('error:claimAllDays', (err) => {\n            this.trigger('CallOnSchedulerClaimAllDaysError', err);\n        });\n        this.gp.schedulers.on('join', ({ scheduler, playerScheduler }) => {\n            this.trigger(\n                'CallOnSchedulerJoin',\n                JSON.stringify(playerScheduler)\n            );\n        });\n        this.gp.schedulers.on('error:join', (err) => {\n            this.trigger('CallOnSchedulerJoinError', err);\n        });\n\n        //Variables\n        this.gp.variables.on('fetchPlatformVariables', (variables) => {\n            this.trigger(\n                'CallOnFetchPlatformVariables',\n                JSON.stringify(variables)\n            );\n        });\n        this.gp.variables.on('error:fetchPlatformVariables', (error) => {\n            this.trigger('CallOnFetchPlatformVariablesError', error);\n        });\n\n        //Uniques\n        this.gp.uniques.on('register', (uniqueValue) => {\n            this.trigger(\n                'CallOnUniqueValueRegister',\n                JSON.stringify(uniqueValue)\n            );\n        });\n        this.gp.uniques.on('error:register', (error) => {\n            this.trigger('CallOnUniqueValueRegisterError', error);\n        });\n\n        this.gp.uniques.on('check', (uniqueValue) => {\n            this.trigger('CallOnUniqueValueCheck', JSON.stringify(uniqueValue));\n        });\n        this.gp.uniques.on('error:check', (error) => {\n            this.trigger('CallOnUniqueValueCheckError', error);\n        });\n\n        this.gp.uniques.on('delete', (uniqueValue) => {\n            this.trigger(\n                'CallOnUniqueValueDelete',\n                JSON.stringify(uniqueValue)\n            );\n        });\n        this.gp.uniques.on('error:delete', (error) => {\n            this.trigger('CallOnUniqueValueDeleteError', error);\n        });\n    }\n\n    trigger(eventName, value) {\n        if (window.unityInstance !== null) {\n            window.unityInstance.SendMessage(\n                'GamePushSDK',\n                eventName,\n                this.toUnity(value)\n            );\n        }\n    }\n\n    getQuery(idOrTag) {\n        const id = parseInt(idOrTag, 10) || 0;\n        return (query = id > 0 ? { id } : { tag: idOrTag });\n    }\n\n    toUnity(value) {\n        switch (typeof value) {\n            case 'boolean': {\n                return String(value);\n            }\n            case 'number': {\n                return value;\n            }\n            case 'string': {\n                return value;\n            }\n            case 'object': {\n                return JSON.stringify(value);\n            }\n        }\n        return value;\n    }\n\n    mapItemsWithChannel(items = {}) {\n        return {\n            ...items,\n            ch_private: items.private\n        };\n    }\n\n    Language() {\n        return this.gp.language;\n    }\n    AvatarGenerator() {\n        return this.gp.avatarGenerator;\n    }\n    PlatformType() {\n        return this.gp.platform.type;\n    }\n    PlatformHasIntegratedAuth() {\n        return this.toUnity(this.gp.platform.hasIntegratedAuth);\n    }\n    PlatformIsExternalLinksAllowed() {\n        return this.toUnity(this.gp.platform.isExternalLinksAllowed);\n    }\n\n    AppTitle() {\n        return this.gp.app.title;\n    }\n    AppDescription() {\n        return this.gp.app.description;\n    }\n    AppImage() {\n        return this.gp.app.image;\n    }\n    AppUrl() {\n        return this.gp.app.url;\n    }\n    AppRequestReview() {\n        return this.gp.app.requestReview().then((result) => {\n            if (result.success) {\n                this.trigger('CallReviewResult', result.rating);\n            } else {\n                this.trigger('CallReviewClose', result.error);\n            }\n        });\n    }\n\n    AppCanRequestReview() {\n        return this.toUnity(this.gp.app.canRequestReview);\n    }\n\n    AppIsAlreadyReviewed() {\n        return this.toUnity(this.gp.app.isAlreadyReviewed);\n    }\n\n    AppAddShortcut() {\n        return this.gp.app\n            .addShortcut()\n            .then((success) => this.trigger('CallAddShortcut', success));\n    }\n\n    AppCanAddShortcut() {\n        return this.toUnity(this.gp.app.canAddShortcut);\n    }\n\n    // PLAYER\n\n    PlayerGetID() {\n        return this.gp.player.id;\n    }\n\n    PlayerGetScore() {\n        return this.gp.player.score;\n    }\n    PlayerSetScore(score) {\n        this.gp.player.score = Number(score);\n    }\n    PlayerAddScore(score) {\n        this.gp.player.score += Number(score);\n    }\n\n    PlayerGetName() {\n        return this.gp.player.name;\n    }\n    PlayerSetName(name) {\n        this.gp.player.name = name;\n    }\n\n    PlayerGetAvatar() {\n        return this.gp.player.avatar;\n    }\n    PlayerSetAvatar(src) {\n        this.gp.player.avatar = src;\n    }\n\n    PlayerGet(key) {\n        return this.toUnity(this.gp.player.get(key));\n    }\n\n    PlayerSetString(key, value) {\n        this.gp.player.set(key, value);\n    }\n    PlayerSetNumber(key, value) {\n        this.gp.player.set(key, value);\n    }\n    PlayerSetBool(key, value) {\n        if (value == 'True') value = true;\n        else if (value == 'False') value = false;\n        this.gp.player.set(key, value);\n    }\n    PlayerAdd(key, value) {\n        this.gp.player.add(key, Number(value));\n    }\n\n    PlayerHas(key) {\n        return this.toUnity(this.gp.player.has(key));\n    }\n\n    PlayerSetFlag(key, value) {\n        this.gp.player.set(key, !Boolean(value));\n    }\n    PlayerToggle(key) {\n        this.gp.player.toggle(key);\n    }\n\n    PlayerGetFieldName(key) {\n        return this.gp.player.getFieldName(key);\n    }\n    PlayerGetFieldVariantName(key, value) {\n        return this.gp.player.getFieldVariantName(key, value);\n    }\n    PlayerGetFieldVariantAt(key, index) {\n        const variant = this.gp.player.getField(key).variants[index];\n        return variant ? variant.value : '';\n    }\n    PlayerGetFieldVariantIndex(key, value) {\n        return this.gp.player\n            .getField(key)\n            .variants.findIndex((v) => v.value === value);\n    }\n\n    PlayerReset() {\n        this.gp.player.reset();\n    }\n    PlayerRemove() {\n        this.gp.player.remove();\n    }\n    PlayerSync(override = false) {\n        return this.gp.player.sync({ override: Boolean(override) });\n    }\n    PlayerLoad() {\n        return this.gp.player.load();\n    }\n    PlayerLogin() {\n        return this.gp.player.login();\n    }\n    PlayerFetchFields() {\n        this.gp.player.fetchFields();\n    }\n\n    PlayerIsLoggedIn() {\n        return this.toUnity(this.gp.player.isLoggedIn);\n    }\n\n    PlayerHasAnyCredentials(key) {\n        return this.toUnity(this.gp.player.hasAnyCredentials);\n    }\n\n    PlayerIsStub(key) {\n        return this.toUnity(this.gp.player.isStub);\n    }\n\n    PlayerGetActiveDays() {\n        return this.toUnity(this.gp.player.stats.activeDays);\n    }\n\n    PlayerGetActiveDaysConsecutive() {\n        return this.toUnity(this.gp.player.stats.activeDaysConsecutive);\n    }\n\n    PlayerGetPlaytimeToday() {\n        return this.toUnity(this.gp.player.stats.playtimeToday);\n    }\n\n    PlayerGetPlaytimeAll() {\n        return this.toUnity(this.gp.player.stats.playtimeAll);\n    }\n\n    // LEADERBOARD\n\n    LeaderboardOpen(\n        orderBy,\n        order,\n        limit,\n        showNearest,\n        withMe,\n        includeFields,\n        displayFields\n    ) {\n        return this.gp.leaderboard\n            .open({\n                id: this.gp.player.id,\n                orderBy: orderBy\n                    .split(',')\n                    .map((o) => o.trim())\n                    .filter((f) => f),\n                order: order,\n                limit: limit,\n                includeFields: includeFields\n                    .split(',')\n                    .map((o) => o.trim())\n                    .filter((f) => f),\n                displayFields: displayFields\n                    .split(',')\n                    .map((o) => o.trim())\n                    .filter((f) => f),\n                withMe: withMe,\n                showNearest: showNearest\n            })\n            .catch(console.warn);\n    }\n\n    LeaderboardFetch(\n        tag,\n        orderBy,\n        order,\n        limit,\n        showNearest,\n        withMe,\n        includeFields\n    ) {\n        return this.gp.leaderboard\n            .fetch({\n                id: this.gp.player.id,\n                orderBy: orderBy\n                    .split(',')\n                    .map((o) => o.trim())\n                    .filter((f) => f),\n                order: order,\n                limit: limit,\n                includeFields: includeFields\n                    .split(',')\n                    .map((o) => o.trim())\n                    .filter((f) => f),\n                withMe: withMe,\n                showNearest: showNearest\n            })\n            .then((leaderboardInfo) => {\n                this.trigger('CallLeaderboardFetchTag', tag);\n                this.trigger(\n                    'CallLeaderboardFetch',\n                    JSON.stringify(leaderboardInfo.players)\n                );\n                this.trigger(\n                    'CallLeaderboardFetchTop',\n                    JSON.stringify(leaderboardInfo.topPlayers)\n                );\n                this.trigger(\n                    'CallLeaderboardFetchAbove',\n                    JSON.stringify(leaderboardInfo.abovePlayers)\n                );\n                this.trigger(\n                    'CallLeaderboardFetchBelow',\n                    JSON.stringify(leaderboardInfo.belowPlayers)\n                );\n                this.trigger(\n                    'CallLeaderboardFetchOnlyPlayer',\n                    JSON.stringify(leaderboardInfo.player)\n                );\n            })\n            .catch((err) => {\n                console.warn(err);\n                this.trigger('CallLeaderboardFetchError');\n            });\n    }\n\n    LeaderboardFetchPlayerRating(tag, orderBy, order) {\n        return this.gp.leaderboard\n            .fetchPlayerRating({\n                id: this.gp.player.id,\n                orderBy: orderBy\n                    .split(',')\n                    .map((o) => o.trim())\n                    .filter((f) => f),\n                order\n            })\n            .then((result) => {\n                this.trigger('CallLeaderboardFetchPlayerTag', tag);\n                this.trigger(\n                    'CallLeaderboardFetchPlayerRating',\n                    result.player.position\n                );\n            })\n            .catch((err) => {\n                console.warn(err);\n                this.trigger('CallLeaderboardFetchPlayerError');\n            });\n    }\n\n    // LEADERBOARD SCOPED\n\n    LeaderboardScopedOpen(\n        idOrTag,\n        variant,\n        order,\n        limit,\n        showNearest,\n        includeFields,\n        displayFields,\n        withMe\n    ) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? { id } : { tag: idOrTag };\n        return this.gp.leaderboard\n            .openScoped({\n                ...query,\n                variant,\n                order,\n                limit: limit,\n                includeFields: includeFields\n                    .split(',')\n                    .map((o) => o.trim())\n                    .filter((f) => f),\n                displayFields: displayFields\n                    .split(',')\n                    .map((o) => o.trim())\n                    .filter((f) => f),\n                withMe: withMe,\n                showNearest: showNearest\n            })\n            .catch(console.warn);\n    }\n\n    LeaderboardScopedFetch(\n        idOrTag,\n        variant,\n        order,\n        limit,\n        showNearest,\n        includeFields,\n        withMe\n    ) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? { id } : { tag: idOrTag };\n        return this.gp.leaderboard\n            .fetchScoped({\n                ...query,\n                variant: variant,\n                order: order,\n                limit: limit,\n                includeFields: includeFields\n                    .split(',')\n                    .map((o) => o.trim())\n                    .filter((f) => f),\n                withMe,\n                showNearest: showNearest\n            })\n            .then((leaderboardScopedInfo) => {\n                this.trigger('CallLeaderboardScopedFetchTag', idOrTag);\n                this.trigger('CallLeaderboardScopedFetchVariant', variant);\n                this.trigger(\n                    'CallLeaderboardScopedFetch',\n                    JSON.stringify(leaderboardScopedInfo.players)\n                );\n                this.trigger(\n                    'CallLeaderboardScopedFetchTop',\n                    JSON.stringify(leaderboardScopedInfo.topPlayers)\n                );\n                this.trigger(\n                    'CallLeaderboardScopedFetchAbove',\n                    JSON.stringify(leaderboardScopedInfo.abovePlayers)\n                );\n                this.trigger(\n                    'CallLeaderboardScopedFetchBelow',\n                    JSON.stringify(leaderboardScopedInfo.belowPlayers)\n                );\n                this.trigger(\n                    'CallLeaderboardScopedFetchOnlyPlayer',\n                    JSON.stringify(leaderboardScopedInfo.player)\n                );\n            })\n            .catch((err) => {\n                console.warn(err);\n                this.trigger('CallLeaderboardScopedFetchError');\n            });\n    }\n\n    LeaderboardScopedPublishRecord(\n        idOrTag,\n        variant,\n        override,\n        key1,\n        value1,\n        key2,\n        value2,\n        key3,\n        value3\n    ) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? { id } : { tag: idOrTag };\n        return this.gp.leaderboard\n            .publishRecord({\n                ...query,\n                variant,\n                override: Boolean(override),\n                record: {\n                    [key1]: value1,\n                    [key2]: value2,\n                    [key3]: value3\n                }\n            })\n            .then(() => {\n                this.trigger('CallLeaderboardScopedPublishRecordComplete');\n            })\n            .catch((err) => {\n                console.warn(err);\n                this.trigger('CallLeaderboardScopedPublishRecordError');\n            });\n    }\n\n    LeaderboardScopedFetchPlayerRating(idOrTag, variant, includeFields) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? { id } : { tag: idOrTag };\n        return this.gp.leaderboard\n            .fetchPlayerRatingScoped({\n                ...query,\n                variant,\n                includeFields: includeFields\n                    .split(',')\n                    .map((o) => o.trim())\n                    .filter((f) => f)\n            })\n            .then((result) => {\n                this.trigger('CallLeaderboardScopedFetchPlayerTag', idOrTag);\n                this.trigger(\n                    'CallLeaderboardScopedFetchPlayerVariant',\n                    variant\n                );\n                this.trigger(\n                    'CallLeaderboardScopedFetchPlayerRating',\n                    result.player.position\n                );\n            })\n            .catch((err) => {\n                console.warn(err);\n                this.trigger('CallLeaderboardFetchPlayerError');\n            });\n    }\n\n    // ACHIEVEMENTS\n    AchievementsOpen() {\n        return this.gp.achievements.open().catch(console.warn);\n    }\n    AchievementsFetch() {\n        return this.gp.achievements\n            .fetch()\n            .then((result) => {\n                this.trigger(\n                    'CallAchievementsFetch',\n                    JSON.stringify(result.achievements)\n                );\n                this.trigger(\n                    'CallAchievementsFetchGroups',\n                    JSON.stringify(result.achievementsGroups)\n                );\n                this.trigger(\n                    'CallPlayerAchievementsFetch',\n                    JSON.stringify(result.playerAchievements)\n                );\n            })\n            .catch((err) => {\n                console.warn(err);\n                this.trigger('CallAchievementsFetchError');\n            });\n    }\n    AchievementsUnlock(idOrTag) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? { id } : { tag: idOrTag };\n        return this.gp.achievements\n            .unlock(query)\n            .then((result) => {\n                if (result.success) {\n                    this.trigger('CallAchievementsUnlock', result.achievement);\n                    return;\n                }\n\n                this.trigger('CallAchievementsUnlockError');\n            })\n\n            .catch((err) => {\n                console.warn(err);\n                this.trigger('CallAchievementsUnlockError');\n            });\n    }\n\n    AchievementsSetProgress(idOrTag, progress) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? { id } : { tag: idOrTag };\n\n        return this.gp.achievements\n            .setProgress({ ...query, progress })\n            .then((result) => {\n                if (result.success) {\n                    this.trigger('CallAchievementsProgress', idOrTag);\n                    return;\n                }\n                this.trigger('CallAchievementsProgressError');\n            })\n            .catch((err) => {\n                console.warn(err);\n                this.trigger('CallAchievementsProgressError');\n            });\n    }\n\n    AchievementsHas(idOrTag) {\n        return this.toUnity(this.gp.achievements.has(idOrTag));\n    }\n    AchievementsGetProgress(idOrTag) {\n        return this.gp.achievements.getProgress(idOrTag);\n    }\n\n    // PAYMENTS\n    PaymentsFetchProducts() {\n        return this.gp.payments\n            .fetchProducts()\n            .then((result) => {\n                this.trigger(\n                    'CallPaymentsFetchProducts',\n                    JSON.stringify(result.products)\n                );\n                this.trigger(\n                    'CallPaymentsFetchPlayerPurcahses',\n                    JSON.stringify(result.playerPurchases)\n                );\n            })\n            .catch((err) => {\n                console.warn(err);\n                this.trigger('CallPaymentsFetchProductsError');\n            });\n    }\n    PaymentsPurchase(idOrTag) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? { id } : { tag: idOrTag };\n        return this.gp.payments\n            .purchase(query)\n            .then((result) => {\n                if (result.success) {\n                    this.trigger('CallPaymentsPurchase', idOrTag);\n                    window.focus();\n                    return;\n                }\n\n                this.trigger('CallPaymentsPurchaseError');\n\n                window.focus();\n            })\n            .catch((err) => {\n                console.warn(err);\n                this.trigger('CallPaymentsPurchaseError');\n                window.focus();\n            });\n    }\n    PaymentsConsume(idOrTag) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? { id } : { tag: idOrTag };\n        return this.gp.payments\n            .consume(query)\n            .then((result) => {\n                if (result.success) {\n                    this.trigger('CallPaymentsConsume', idOrTag);\n                    window.focus();\n                    return;\n                }\n\n                this.trigger('CallPaymentsConsumeError');\n            })\n            .catch((err) => {\n                console.warn(err);\n                this.trigger('CallPaymentsConsumeError');\n            });\n    }\n    PaymentsIsAvailable() {\n        return this.toUnity(this.gp.payments.isAvailable);\n    }\n\n    // Subscriptions\n    PaymentsIsSubscriptionsAvailable() {\n        return this.toUnity(this.gp.payments.isSubscriptionsAvailable);\n    }\n\n    PaymentsSubscribe(idOrTag) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? { id } : { tag: idOrTag };\n        return this.gp.payments\n            .subscribe(query)\n            .then((result) => {\n                if (result.success) {\n                    this.trigger('CallPaymentsSubscribeSuccess', idOrTag);\n                } else {\n                    this.trigger('CallPaymentsSubscribeError');\n                }\n            })\n            .catch((err) => {\n                console.warn(err);\n                this.trigger('CallPaymentsSubscribeError');\n            });\n    }\n\n    PaymentsUnsubscribe(idOrTag) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? { id } : { tag: idOrTag };\n        return this.gp.payments\n            .unsubscribe(query)\n            .then((result) => {\n                if (result.success) {\n                    this.trigger('CallPaymentsUnsubscribeSuccess', idOrTag);\n                } else {\n                    this.trigger('CallPaymentsUnsubscribeError');\n                }\n            })\n            .catch((err) => {\n                console.warn(err);\n                this.trigger('CallPaymentsUnsubscribeError');\n            });\n    }\n\n    FullscreenOpen() {\n        return this.gp.fullscreen.open();\n    }\n    FullscreenClose() {\n        return this.gp.fullscreen.close();\n    }\n    FullscreenToggle() {\n        return this.gp.fullscreen.toggle();\n    }\n\n    // ADS\n    AdsShowFullscreen() {\n        return this.gp.ads.showFullscreen();\n    }\n    AdsShowRewarded(idOrTag) {\n        this.lastRewardedTag = idOrTag;\n        return this.gp.ads.showRewardedVideo();\n    }\n    AdsShowPreloader() {\n        return this.gp.ads.showPreloader();\n    }\n    AdsShowSticky() {\n        return this.gp.ads.showSticky();\n    }\n    AdsCloseSticky() {\n        return this.gp.ads.closeSticky();\n    }\n    AdsRefreshSticky() {\n        return this.gp.ads.refreshSticky();\n    }\n\n    AdsIsAdblockEnabled() {\n        return this.toUnity(this.gp.ads.isAdblockEnabled);\n    }\n\n    AdsIsStickyAvailable() {\n        return this.toUnity(this.gp.ads.isStickyAvailable);\n    }\n    AdsIsFullscreenAvailable() {\n        return this.toUnity(this.gp.ads.isFullscreenAvailable);\n    }\n    AdsIsRewardedAvailable() {\n        return this.toUnity(this.gp.ads.isRewardedAvailable);\n    }\n    AdsIsPreloaderAvailable() {\n        return this.toUnity(this.gp.ads.isPreloaderAvailable);\n    }\n\n    AdsIsStickyPlaying() {\n        return this.toUnity(this.gp.ads.isStickyPlaying);\n    }\n    AdsIsFullscreenPlaying() {\n        return this.toUnity(this.gp.ads.isFullscreenPlaying);\n    }\n    AdsIsRewardedPlaying() {\n        return this.toUnity(this.gp.ads.isRewardedPlaying);\n    }\n    AdsIsPreloaderPlaying() {\n        return this.toUnity(this.gp.ads.isPreloaderPlaying);\n    }\n\n    AdsIsCountdownOverlayEnabled() {\n        return this.toUnity(this.gp.ads.isCountdownOverlayEnabled);\n    }\n\n    AdsIsRewardedFailedOverlayEnabled() {\n        return this.toUnity(this.gp.ads.isRewardedFailedOverlayEnabled);\n    }\n\n    AdsCanShowFullscreenBeforeGamePlay() {\n        return this.toUnity(this.gp.ads.canShowFullscreenBeforeGamePlay);\n    }\n\n    // ANALYTICS\n    AnalyticsHit(url) {\n        return this.gp.analytics.hit(url);\n    }\n    AnalyticsGoal(event, value) {\n        return this.gp.analytics.goal(event, value);\n    }\n\n    /* SOCIAL */\n    SocialsShare(text, url, image) {\n        return this.gp.socials.share({ text, url, image });\n    }\n    SocialsPost(text, url, image) {\n        return this.gp.socials.post({ text, url, image });\n    }\n    SocialsInvite(text, url, image) {\n        return this.gp.socials.invite({ text, url, image });\n    }\n    SocialsJoinCommunity() {\n        return this.gp.socials.joinCommunity();\n    }\n    SocialsCommunityLink() {\n        return this.toUnity(this.gp.socials.communityLink);\n    }\n\n    SocialsIsSupportsShare() {\n        return this.toUnity(this.gp.socials.isSupportsShare);\n    }\n    SocialsIsSupportsNativeShare() {\n        return this.toUnity(this.gp.socials.isSupportsNativeShare);\n    }\n    SocialsIsSupportsNativePosts() {\n        return this.toUnity(this.gp.socials.isSupportsNativePosts);\n    }\n    SocialsIsSupportsNativeInvite() {\n        return this.toUnity(this.gp.socials.isSupportsNativeInvite);\n    }\n    SocialsCanJoinCommunity() {\n        return this.toUnity(this.gp.socials.canJoinCommunity);\n    }\n    SocialsIsSupportsNativeCommunityJoin() {\n        return this.toUnity(this.gp.socials.isSupportsNativeCommunityJoin);\n    }\n\n    SocialsMakeShareLink(shareContent) {\n        return this.toUnity(\n            this.gp.socials.makeShareUrl({\n                fromId: this.gp.player.id,\n                content: shareContent\n            })\n        );\n    }\n    SocialsGetSharePlayerID() {\n        return this.toUnity(this.gp.socials.getShareParam('fromId'));\n    }\n    SocialsGetShareContent() {\n        return this.toUnity(this.gp.socials.getShareParam('content'));\n    }\n\n    /* GAMES COLLECTIONS */\n    GamesCollectionsOpen(idOrTag) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? { id } : { tag: idOrTag || 'ANY' };\n        return this.gp.gamesCollections.open(query);\n    }\n    GamesCollectionsFetch(idOrTag) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? { id } : { tag: idOrTag };\n        return this.gp.gamesCollections\n            .fetch(query)\n            .then((result) => {\n                this.trigger('CallGamesCollectionsFetchTag', idOrTag);\n                this.trigger(\n                    'CallGamesCollectionsFetch',\n                    JSON.stringify(result)\n                );\n            })\n            .catch((err) => {\n                console.warn(err);\n                this.trigger('CallGamesCollectionsFetchError');\n            });\n    }\n\n    ChangeLanguage(language) {\n        return this.gp.changeLanguage(language);\n    }\n    ChangeLanguageByCode(language = '') {\n        return this.gp.changeLanguage(language.toLowerCase());\n    }\n    ChangeAvatarGenerator(generator) {\n        return this.gp.changeAvatarGenerator(generator);\n    }\n    LoadOverlay() {\n        return this.gp.loadOverlay();\n    }\n\n    // GAME\n    IsPaused() {\n        return this.toUnity(this.gp.isPaused);\n    }\n\n    Pause() {\n        return this.gp.pause();\n    }\n    Resume() {\n        return this.gp.resume();\n    }\n\n    GameReady() {\n        return this.gp.gameStart();\n    }\n\n    GameplayStart() {\n        return this.gp.gameplayStart();\n    }\n    GameplayStop() {\n        return this.gp.gameplayStop();\n    }\n\n    HappyTime() {\n        if (this.gp.platform.type == 'CRAZY_GAMES')\n            this.gp.platform.getNativeSDK().game.happytime();\n    }\n\n    // GAME\n\n    //Device\n    IsMobile() {\n        return this.toUnity(this.gp.isMobile);\n    }\n    IsPortrait() {\n        return this.toUnity(this.gp.isPortrait);\n    }\n    //Device\n\n    // Server\n    ServerTime() {\n        return this.toUnity(this.gp.serverTime);\n    }\n    // Server\n\n    // System\n    IsDev() {\n        return this.toUnity(this.gp.isDev);\n    }\n\n    IsAllowedOrigin() {\n        return this.toUnity(this.gp.isAllowedOrigin);\n    }\n    // System\n\n    // Variables\n    VariablesFetch() {\n        return this.gp.variables\n            .fetch()\n            .then((result) => {\n                this.trigger(\n                    'CallVariablesFetchSuccess',\n                    JSON.stringify(result)\n                );\n            })\n            .catch((err) => {\n                console.warn(err);\n                this.trigger('CallVariablesFetchError');\n            });\n    }\n\n    VariablesHas(key) {\n        return this.toUnity(this.gp.variables.has(key));\n    }\n\n    VariablesGet(key) {\n        return this.toUnity(this.gp.variables.get(key));\n    }\n\n    VariablesIsPlatformVariablesAvailable() {\n        return this.toUnity(this.gp.variables.isPlatformVariablesAvailable);\n    }\n\n    VariablesFetchPlatformVariables(values) {\n        //console.log(values);\n        if (values !== '') {\n            var params = values.split(',').map((o) => o.trim());\n            var map = {};\n            for (var i = 0; i < params.length; i++) {\n                var parts = params[i].split(':');\n                map[parts[0]] = parts[1].trim();\n                console.log(map[parts[0]]);\n            }\n            var options = {\n                clientParams: map\n            };\n            //console.log(options);\n            this.gp.variables.fetchPlatformVariables(options);\n        } else {\n            this.gp.variables.fetchPlatformVariables();\n        }\n    }\n    // Variables\n\n    // Players\n    PlayersFetch(key) {\n        var obj = JSON.parse(key);\n        let ids = [];\n\n        if (parseInt(obj, 10) > 0) {\n            ids = [parseInt(obj, 10)];\n        } else {\n            ids = (obj.idsList || obj.idsArray).map(Number).filter(Boolean);\n        }\n\n        this.gp.players\n            .fetch({ ids })\n            .then((result) => {\n                this.trigger(\n                    'CallPlayersFetchSuccess',\n                    JSON.stringify(result.players)\n                );\n            })\n            .catch((err) => {\n                console.warn(err);\n                this.trigger('CallPlayersFetchError');\n            });\n    }\n    //Players\n\n    // Documents\n    DocumentsOpen() {\n        this.gp.documents.open({ type: 'PLAYER_PRIVACY_POLICY' });\n    }\n\n    DocumentsFetch() {\n        this.gp.documents.fetch({\n            type: 'PLAYER_PRIVACY_POLICY',\n            format: 'TXT'\n        });\n    }\n    // Documents\n\n    // Files\n    FilesUpload(tags) {\n        this.gp.files\n            .upload({\n                tags: tags\n                    .split(',')\n                    .map((o) => o.trim())\n                    .filter((f) => f)\n            })\n            .then((result) => {\n                this.trigger('CallFilesUploadSuccess', JSON.stringify(result));\n            })\n            .catch((err) => {\n                this.trigger('CallFilesUploadError');\n            });\n    }\n\n    FilesUploadUrl(url, filename, tags) {\n        this.gp.files\n            .uploadUrl({\n                url,\n                filename,\n                tags: tags\n                    .split(',')\n                    .map((o) => o.trim())\n                    .filter((f) => f)\n            })\n            .then((result) => {\n                this.trigger(\n                    'CallFilesUploadUrlSuccess',\n                    JSON.stringify(result)\n                );\n            })\n            .catch((err) => {\n                this.trigger('CallFilesUploadUrlError');\n            });\n    }\n\n    FilesUploadContent(content, filename, tags) {\n        this.gp.files\n            .uploadContent({\n                content,\n                filename,\n                tags: tags\n                    .split(',')\n                    .map((o) => o.trim())\n                    .filter((f) => f)\n            })\n            .then((result) => {\n                this.trigger(\n                    'CallFilesUploadContentSuccess',\n                    JSON.stringify(result)\n                );\n            })\n            .catch((err) => {\n                this.trigger('CallFilesUploadContentError');\n            });\n    }\n\n    FilesLoadContent(url) {\n        this.gp.files\n            .loadContent(url)\n            .then((result) => {\n                this.trigger('CallFilesLoadContentSuccess', result);\n            })\n            .catch((err) => {\n                this.trigger('CallFilesLoadContentError');\n            });\n    }\n\n    FilesChooseFile(type) {\n        this.gp.files\n            .chooseFile(type)\n            .then((result) => {\n                this.trigger('CallFilesChooseFile', result.tempUrl);\n            })\n            .catch((err) => {\n                this.trigger('CallFilesChooseFileError');\n            });\n    }\n\n    FilesFetch(filter) {\n        const query = JSON.parse(filter);\n        this.gp.files\n            .fetch(query)\n            .then((result) => {\n                this.trigger('CallFilesFetchCanLoadMore', result.canLoadMore);\n                this.trigger(\n                    'CallFilesFetchSuccess',\n                    JSON.stringify(result.items)\n                );\n            })\n            .catch((err) => {\n                this.trigger('CallFilesFetchError');\n            });\n    }\n\n    FilesFetchMore(filter) {\n        const query = JSON.parse(filter);\n        this.gp.files\n            .fetchMore(query)\n            .then((result) => {\n                this.trigger(\n                    'CallFilesFetchMoreCanLoadMore',\n                    result.canLoadMore\n                );\n                this.trigger(\n                    'CallFilesFetchMoreSuccess',\n                    JSON.stringify(result.items)\n                );\n            })\n            .catch((err) => {\n                this.trigger('CallFilesFetchMoreError');\n            });\n    }\n    // Files\n\n    // Channels\n    Channels_Open_Chat(channel_ID) {\n        if (channel_ID == -10) {\n            this.gp.channels.openChat();\n        } else {\n            this.gp.channels.openChat({ channel_ID });\n        }\n    }\n\n    Channels_Open_Chat_WithTags(channel_ID, tags) {\n        if (channel_ID == -10) {\n            this.gp.channels.openChat({\n                tags: tags\n                    .split(',')\n                    .map((o) => o.trim())\n                    .filter((f) => f)\n            });\n        } else {\n            this.gp.channels.openChat({\n                channel_ID,\n                tags: tags\n                    .split(',')\n                    .map((o) => o.trim())\n                    .filter((f) => f)\n            });\n        }\n    }\n\n    Channels_Open_Personal_Chat(player_ID, tags) {\n        this.gp.channels.openPersonalChat({\n            player_ID,\n            tags: tags\n                .split(',')\n                .map((o) => o.trim())\n                .filter((f) => f)\n        });\n    }\n\n    Channels_Open_Feed(player_ID, tags) {\n        this.gp.channels.openFeed({\n            player_ID,\n            tags: tags\n                .split(',')\n                .map((o) => o.trim())\n                .filter((f) => f)\n        });\n    }\n\n    Channels_IsMainChatEnabled() {\n        return this.toUnity(this.gp.channels.isMainChatEnabled);\n    }\n\n    Channels_MainChatId() {\n        return this.gp.channels.mainChatId;\n    }\n\n    Channels_Join(channelId, password) {\n        this.gp.channels.join({ channelId, password });\n    }\n\n    Channels_CancelJoin(channelId) {\n        this.gp.channels.cancelJoin({ channelId });\n    }\n\n    Channels_Leave(channelId) {\n        this.gp.channels.leave({ channelId });\n    }\n\n    Channels_Kick(channelId, playerId) {\n        this.gp.channels.kick({ channelId, playerId });\n    }\n\n    Channels_Mute_UnmuteAt(channelId, playerId, unmuteAt) {\n        this.gp.channels.mute({ channelId, playerId, unmuteAt });\n    }\n\n    Channels_Mute_Seconds(channelId, playerId, seconds) {\n        this.gp.channels.mute({\n            channelId,\n            playerId,\n            seconds: Number(seconds)\n        });\n    }\n\n    Channels_UnMute(channelId, playerId) {\n        this.gp.channels.unmute({ channelId, playerId });\n    }\n\n    Channels_SendInvite(channelId, playerId) {\n        this.gp.channels.sendInvite({ channelId, playerId });\n    }\n\n    Channels_CancelInvite(channelId, playerId) {\n        this.gp.channels.cancelInvite({ channelId, playerId });\n    }\n\n    Channels_AcceptInvite(channelId) {\n        this.gp.channels.acceptInvite({ channelId });\n    }\n\n    Channels_RejectInvite(channelId) {\n        this.gp.channels.rejectInvite({ channelId });\n    }\n\n    Channels_FetchInvites(limit, offset) {\n        this.gp.channels.fetchInvites({ limit, offset });\n    }\n\n    Channels_FetchMoreInvites(limit) {\n        this.gp.channels.fetchMoreInvites({ limit });\n    }\n\n    Channels_FetchChannelInvites(channelId, limit, offset) {\n        this.gp.channels.fetchChannelInvites({ channelId, limit, offset });\n    }\n\n    Channels_FetchMoreChannelInvites(channelId, limit) {\n        this.gp.channels.fetchMoreChannelInvites({ channelId, limit });\n    }\n\n    Channels_FetchSentInvites(channelId, limit, offset) {\n        this.gp.channels.fetchSentInvites({ channelId, limit, offset });\n    }\n\n    Channels_FetchMoreSentInvites(channelId, limit) {\n        this.gp.channels.fetchMoreSentInvites({ channelId, limit });\n    }\n\n    Channels_AcceptJoinRequest(channelId, playerId) {\n        this.gp.channels.acceptJoinRequest({ channelId, playerId });\n    }\n\n    Channels_RejectJoinRequest(channelId, playerId) {\n        this.gp.channels.rejectJoinRequest({ channelId, playerId });\n    }\n\n    Channels_FetchJoinRequests(channelId, limit, offset) {\n        this.gp.channels.fetchJoinRequests({ channelId, limit, offset });\n    }\n\n    Channels_FetchMoreJoinRequests(channelId, limit) {\n        this.gp.channels.fetchMoreJoinRequests({ channelId, limit });\n    }\n\n    Channels_FetchSentJoinRequests(limit, offset) {\n        this.gp.channels.fetchSentJoinRequests({ limit, offset });\n    }\n\n    Channels_FetchMoreSentJoinRequests(limit) {\n        this.gp.channels.fetchMoreSentJoinRequests({ limit });\n    }\n\n    Channels_SendMessage(channelId, text, tags) {\n        this.gp.channels.sendMessage({\n            channelId,\n            text,\n            tags: tags\n                .split(',')\n                .map((o) => o.trim())\n                .filter((f) => f)\n        });\n    }\n\n    Channels_SendPersonalMessage(playerId, text, tags) {\n        this.gp.channels.sendPersonalMessage({\n            playerId,\n            text,\n            tags: tags\n                .split(',')\n                .map((o) => o.trim())\n                .filter((f) => f)\n        });\n    }\n\n    Channels_SendFeedMessage(playerId, text, tags) {\n        this.gp.channels.sendFeedMessage({\n            playerId,\n            text,\n            tags: tags\n                .split(',')\n                .map((o) => o.trim())\n                .filter((f) => f)\n        });\n    }\n\n    Channels_EditMessage(messageId, text) {\n        this.gp.channels.editMessage({ messageId, text });\n    }\n\n    Channels_DeleteMessage(messageId) {\n        this.gp.channels.deleteMessage({ messageId });\n    }\n\n    Channels_FetchMessages(channelId, tags, limit, offset) {\n        this.gp.channels\n            .fetchMessages({\n                channelId,\n                tags: tags\n                    .split(',')\n                    .map((o) => o.trim())\n                    .filter((f) => f),\n                limit,\n                offset\n            })\n            .then((result) => {\n                this.trigger(\n                    'CallOnFetchMessagesCanLoadMore',\n                    JSON.stringify(result.canLoadMore)\n                );\n                this.trigger(\n                    'CallOnFetchMessages',\n                    JSON.stringify(result.items)\n                );\n            })\n            .catch((err) => {\n                console.warn(err);\n                this.trigger('CallOnFetchMessagesError');\n            });\n    }\n\n    Channels_FetchPersonalMessages(playerId, tags, limit, offset) {\n        this.gp.channels\n            .fetchPersonalMessages({\n                playerId,\n                tags: tags\n                    .split(',')\n                    .map((o) => o.trim())\n                    .filter((f) => f),\n                limit,\n                offset\n            })\n            .then((result) => {\n                this.trigger(\n                    'CallOnFetchPersonalMessagesCanLoadMore',\n                    JSON.stringify(result.canLoadMore)\n                );\n                this.trigger(\n                    'CallOnFetchPersonalMessages',\n                    JSON.stringify(result.items)\n                );\n            })\n            .catch((err) => {\n                console.warn(err);\n                this.trigger('CallOnFetchPersonalMessagesError');\n            });\n    }\n\n    Channels_FetchFeedMessages(playerId, tags, limit, offset) {\n        this.gp.channels\n            .fetchFeedMessages({\n                playerId,\n                tags: tags\n                    .split(',')\n                    .map((o) => o.trim())\n                    .filter((f) => f),\n                limit,\n                offset\n            })\n            .then((result) => {\n                this.trigger(\n                    'CallOnFetchFeedMessagesCanLoadMore',\n                    JSON.stringify(result.canLoadMore)\n                );\n                this.trigger(\n                    'CallOnFetchFeedMessages',\n                    JSON.stringify(result.items)\n                );\n            })\n            .catch((err) => {\n                console.warn(err);\n                this.trigger('CallOnFetchFeedMessagesError');\n            });\n    }\n\n    Channels_FetchMoreMessages(channelId, tags, limit) {\n        this.gp.channels\n            .fetchMoreMessages({\n                channelId,\n                tags: tags\n                    .split(',')\n                    .map((o) => o.trim())\n                    .filter((f) => f),\n                limit\n            })\n            .then((result) => {\n                this.trigger(\n                    'CallOnFetchMoreMessagesCanLoadMore',\n                    result.canLoadMore\n                );\n                this.trigger(\n                    'CallOnFetchMoreMessages',\n                    JSON.stringify(result.items)\n                );\n            })\n            .catch((err) => {\n                console.warn(err);\n                this.trigger('CallOnFetchMoreMessagesError');\n            });\n    }\n\n    Channels_FetchMorePersonalMessages(playerId, tags, limit) {\n        this.gp.channels\n            .fetchMorePersonalMessages({\n                playerId,\n                tags: tags\n                    .split(',')\n                    .map((o) => o.trim())\n                    .filter((f) => f),\n                limit\n            })\n            .then((result) => {\n                this.trigger(\n                    'CallOnFetchMorePersonalMessagesCanLoadMore',\n                    result.canLoadMore\n                );\n                this.trigger(\n                    'CallOnFetchMorePersonalMessages',\n                    JSON.stringify(result.items)\n                );\n            })\n            .catch((err) => {\n                console.warn(err);\n                this.trigger('CallOnFetchMorePersonalMessagesError');\n            });\n    }\n\n    Channels_FetchMoreFeedMessages(playerId, tags, limit) {\n        this.gp.channels\n            .fetchMoreFeedMessages({\n                playerId,\n                tags: tags\n                    .split(',')\n                    .map((o) => o.trim())\n                    .filter((f) => f),\n                limit\n            })\n            .then((result) => {\n                this.trigger(\n                    'CallOnFetchMoreFeedMessagesCanLoadMore',\n                    result.canLoadMore\n                );\n                this.trigger(\n                    'CallOnFetchMoreFeedMessages',\n                    JSON.stringify(result.items)\n                );\n            })\n            .catch((err) => {\n                console.warn(err);\n                this.trigger('CallOnFetchMoreFeedMessagesError');\n            });\n    }\n\n    Channels_DeleteChannel(channelId) {\n        this.gp.channels.deleteChannel({ channelId });\n    }\n\n    Channels_FetchChannel(channelId) {\n        this.gp.channels.fetchChannel({ channelId });\n    }\n\n    Channels_CreateChannel(filter) {\n        const query = JSON.parse(filter);\n        this.gp.channels.createChannel({ ...query, private: query.ch_private });\n    }\n\n    Channels_UpdateChannel(filter) {\n        const query = JSON.parse(filter);\n        this.gp.channels.updateChannel({ ...query, private: query.ch_private });\n    }\n\n    Channels_FetchChannels(filter) {\n        const query = JSON.parse(filter);\n        this.gp.channels.fetchChannels(query);\n    }\n\n    Channels_FetchMoreChannels(filter) {\n        const query = JSON.parse(filter);\n        this.gp.channels.fetchMoreChannels(query);\n    }\n\n    Channels_FetchMembers(filter) {\n        const query = JSON.parse(filter);\n        this.gp.channels.fetchMembers(query);\n    }\n\n    Channels_FetchMoreMembers(filter) {\n        const query = JSON.parse(filter);\n        this.gp.channels.fetchMoreMembers(query);\n    }\n    // Channels\n\n    // Triggers\n    Triggers_Claim(idOrTag) {\n        try {\n            this.gp.triggers.claim({ id: idOrTag });\n        } catch (error) {\n            console.warn(error);\n            try {\n                this.gp.triggers.claim({ tag: idOrTag });\n            } catch (error) {\n                console.warn(error);\n            }\n        }\n    }\n\n    Triggers_List() {\n        return this.toUnity(this.gp.triggers.list);\n    }\n\n    Triggers_ActivatedList() {\n        return this.toUnity(this.gp.triggers.activatedList);\n    }\n\n    Triggers_GetTrigger(idOrTag) {\n        return this.toUnity(this.gp.triggers.getTrigger(idOrTag));\n    }\n\n    Triggers_IsActivated(idOrTag) {\n        return this.toUnity(this.gp.triggers.isActivated(idOrTag));\n    }\n\n    Triggers_IsClaimed(idOrTag) {\n        return this.toUnity(this.gp.triggers.isClaimed(idOrTag));\n    }\n    // Triggers\n\n    // Events\n    Events_Join(idOrTag) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? { id } : { tag: idOrTag };\n        this.gp.events.join(query);\n    }\n\n    Events_List() {\n        return this.toUnity(this.gp.events.list);\n    }\n\n    Events_ActiveList() {\n        return this.toUnity(this.gp.events.activeList);\n    }\n\n    Events_GetEvent(idOrTag) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? id : idOrTag;\n        const result = this.toUnity(this.gp.events.getEvent(query).event);\n        return result;\n    }\n\n    Events_IsActive(idOrTag) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? id : idOrTag;\n        const result = this.gp.events.has(query);\n        return this.toUnity(result);\n    }\n\n    Events_IsJoined(idOrTag) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? id : idOrTag;\n        const result = this.toUnity(this.gp.events.isJoined(query));\n        return result;\n    }\n    // Events\n\n    // Segments\n    Segments_List() {\n        return this.toUnity(this.gp.segments.list);\n    }\n    Segments_Has(tag) {\n        return this.toUnity(this.gp.segments.has(tag));\n    }\n    // Segments\n\n    // Experiments\n    Experiments_Map() {\n        return this.toUnity(this.gp.experiments.map);\n    }\n    Experiments_Has(tag, cohort) {\n        return this.toUnity(this.gp.experiments.has(tag, cohort));\n    }\n    // Experiments\n\n    //Rewards\n    Rewards_Give(idOrTag, lazy) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? { id: id } : { tag: idOrTag };\n        //console.log(query);\n        this.gp.rewards\n            .give({ ...query, lazy: lazy })\n            .then((result) => {\n                this.trigger('CallOnRewardsGive', JSON.stringify(result));\n            })\n            .catch((err) => {\n                this.trigger('CallOnRewardsGiveError', err);\n            });\n    }\n\n    Rewards_Accept(idOrTag) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? { id: id } : { tag: idOrTag };\n        this.gp.rewards\n            .accept({ ...query })\n            .then((result) => {\n                this.trigger('CallOnRewardsAccept', JSON.stringify(result));\n            })\n            .catch((err) => {\n                this.trigger('CallOnRewardsAcceptError', err);\n            });\n    }\n\n    Rewards_List() {\n        return this.toUnity(this.gp.rewards.list);\n    }\n\n    Rewards_GivenList() {\n        return this.toUnity(this.gp.rewards.givenList);\n    }\n\n    Rewards_GetReward(idOrTag) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? id : idOrTag;\n        const result = this.toUnity(this.gp.rewards.getReward(query));\n        return result;\n    }\n\n    Rewards_Has(idOrTag) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? id : idOrTag;\n        return this.toUnity(this.gp.rewards.has(query));\n    }\n\n    Rewards_HasAccepted(idOrTag) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? id : idOrTag;\n        return this.toUnity(this.gp.rewards.hasAccepted(query));\n    }\n\n    Rewards_HasUnaccepted(idOrTag) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? id : idOrTag;\n        return this.toUnity(this.gp.rewards.hasUnaccepted(query));\n    }\n    //Rewards\n\n    //Schedulers\n    Schedulers_Register(idOrTag) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? { id: id } : { tag: idOrTag };\n        this.gp.schedulers.register(query);\n    }\n\n    Schedulers_ClaimDay(idOrTag, day) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? id : idOrTag;\n\n        console.log(query);\n        console.log(day);\n\n        this.gp.schedulers.claimDay(query, day);\n    }\n\n    Schedulers_ClaimDayAdditional(idOrTag, day, triggerIdOrTag) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? id : idOrTag;\n\n        const triggerId = parseInt(triggerIdOrTag, 10) || 0;\n        const triggerQuery = triggerId > 0 ? triggerId : triggerIdOrTag;\n\n        console.log(query);\n        console.log(day);\n        console.log(triggerQuery);\n\n        this.gp.schedulers.claimDayAdditional(query, day, triggerQuery);\n    }\n\n    Schedulers_ClaimAllDay(idOrTag, day) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? id : idOrTag;\n        console.log(query);\n        console.log(day);\n        this.gp.schedulers.claimAllDay(query, day);\n    }\n\n    Schedulers_ClaimAllDays(idOrTag) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? id : idOrTag;\n        console.log(query);\n        this.gp.schedulers.claimAllDays(query);\n    }\n\n    Schedulers_List() {\n        const list = this.gp.schedulers.list;\n        console.log(list);\n        return this.toUnity(list);\n    }\n\n    Schedulers_ActiveList() {\n        const list = this.gp.schedulers.activeList;\n        console.log(list);\n        return this.toUnity(list);\n    }\n\n    Schedulers_GetScheduler(idOrTag) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? id : idOrTag;\n        console.log(query);\n        const result = this.toUnity(this.gp.schedulers.getScheduler(query));\n        console.log(result);\n        return result;\n    }\n\n    Schedulers_GetSchedulerDay(idOrTag, day) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? id : idOrTag;\n        console.log(query);\n        console.log(day);\n        const result = this.toUnity(\n            this.gp.schedulers.getSchedulerDay(query, day)\n        );\n        console.log(result);\n        return result;\n    }\n\n    Schedulers_GetSchedulerCurrentDay(idOrTag) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? id : idOrTag;\n        console.log(query);\n        const result = this.toUnity(\n            this.gp.schedulers.getSchedulerCurrentDay(query)\n        );\n        console.log(result);\n        return result;\n    }\n\n    Schedulers_IsRegistered(idOrTag) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? id : idOrTag;\n        const result = this.gp.schedulers.isRegistered(query);\n        console.log(result);\n        return this.toUnity(result);\n    }\n\n    Schedulers_IsTodayRewardClaimed(idOrTag) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? id : idOrTag;\n        const result = this.gp.schedulers.isTodayRewardClaimed(query);\n        console.log(result);\n        return this.toUnity(result);\n    }\n\n    Schedulers_CanClaimDay(idOrTag, day) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? id : idOrTag;\n        const result = this.gp.schedulers.canClaimDay(query, day);\n        console.log(result);\n        return this.toUnity(result);\n    }\n\n    Schedulers_CanClaimDayAdditional(idOrTag, day, triggerIdOrTag) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? id : idOrTag;\n        const triggerId = parseInt(triggerIdOrTag, 10) || 0;\n        const triggerQuery = triggerId > 0 ? triggerId : triggerIdOrTag;\n\n        const result = this.gp.schedulers.canClaimDayAdditional(\n            query,\n            day,\n            triggerQuery\n        );\n        console.log(result);\n        return this.toUnity(result);\n    }\n\n    Schedulers_CanClaimAllDay(idOrTag, day) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? id : idOrTag;\n        const result = this.gp.schedulers.canClaimAllDay(query, day);\n        console.log(result);\n        return this.toUnity(result);\n    }\n    // Schedulers\n\n    // Images\n    ImagesUpload(tags) {\n        this.gp.images\n            .upload({\n                tags: tags\n                    .split(',')\n                    .map((o) => o.trim())\n                    .filter((f) => f)\n            })\n            .then((result) => {\n                this.trigger('CallImagesUploadSuccess', JSON.stringify(result));\n            })\n            .catch((err) => {\n                this.trigger('CallImagesUploadError', err);\n            });\n    }\n\n    ImagesUploadUrl(url, tags) {\n        this.gp.images\n            .uploadUrl({\n                url,\n                tags: tags\n                    .split(',')\n                    .map((o) => o.trim())\n                    .filter((f) => f)\n            })\n            .then((result) => {\n                this.trigger(\n                    'CallImagesUploadUrlSuccess',\n                    JSON.stringify(result)\n                );\n            })\n            .catch((err) => {\n                this.trigger('CallImagesUploadUrlError', err);\n            });\n    }\n\n    ImagesChooseFile() {\n        this.gp.images\n            .chooseFile()\n            .then((result) => {\n                this.trigger('CallImagesChooseFile', result.tempUrl);\n            })\n            .catch((err) => {\n                this.trigger('CallImagesChooseFileError', err);\n            });\n    }\n\n    ImagesFetch(filter) {\n        const query = JSON.parse(filter);\n        this.gp.images\n            .fetch(query)\n            .then((result) => {\n                console.log(result);\n                this.trigger('CallImagesFetchCanLoadMore', result.canLoadMore);\n                this.trigger(\n                    'CallImagesFetchSuccess',\n                    JSON.stringify(result.items)\n                );\n            })\n            .catch((err) => {\n                this.trigger('CallImagesFetchError', err);\n            });\n    }\n\n    ImagesFetchMore(filter) {\n        const query = JSON.parse(filter);\n        this.gp.images\n            .fetchMore(query)\n            .then((result) => {\n                this.trigger('CallImagesFetchCanLoadMore', result.canLoadMore);\n                this.trigger(\n                    'CallImagesFetchSuccess',\n                    JSON.stringify(result.items)\n                );\n            })\n            .catch((err) => {\n                this.trigger('CallImagesFetchError', err);\n            });\n    }\n\n    ImagesResize(params) {\n        const query = JSON.parse(params);\n        console.log(query);\n        const url = this.gp.images.resize(\n            query.url,\n            query.width,\n            query.height,\n            query.cutBySize\n        );\n        this.trigger('CallImagesResize', url);\n    }\n\n    // Images\n\n    // Custom\n    CustomCall(name, args) {\n        let callFunc = 'GamePush.' + name;\n\n        if (args == null) window.executeFunctionByName(callFunc, window);\n        else {\n            let argArray = args.replace(/\\s/g, '').split(',');\n\n            window.executeFunctionByName(callFunc, window, ...argArray);\n        }\n    }\n\n    CustomReturn(name, args) {\n        let callFunc = 'GamePush.' + name;\n\n        let value;\n        if (args == null)\n            value = window.executeFunctionByName(callFunc, window);\n        else {\n            args = args.replace(/\\s/g, '');\n            let argArray = args.split(',');\n\n            value = window.executeFunctionByName(callFunc, window, ...argArray);\n        }\n\n        return formatCustomValue(value);\n    }\n\n    CustomGetValue(name) {\n        let valueName = 'GamePush.' + name;\n        let value = window.returnValueByName(valueName, window);\n\n        return formatCustomValue(value);\n    }\n\n    CustomAsyncReturn(name, args) {\n        let callFunc = 'GamePush.' + name;\n\n        if (args != null) args = args.replace(/\\s/g, '').split(',');\n\n        try {\n            window\n                .executeFunctionByName(callFunc, window, ...args)\n                .then((result) => {\n                    this.trigger(\n                        'CallCustomAsyncReturn',\n                        formatCustomValue(result)\n                    );\n                })\n                .catch((err) => {\n                    console.warn(err);\n                    this.trigger('CallCustomAsyncError', err);\n                });\n        } catch (error) {\n            console.warn(error);\n        }\n    }\n    //Custom\n\n    //Logger\n    LoggerInfo(title, text) {\n        this.gp.logger.info(title, text);\n    }\n    LoggerWarn(title, text) {\n        this.gp.logger.warn(title, text);\n    }\n    LoggerError(title, text) {\n        this.gp.logger.error(title, text);\n    }\n    LoggerLog(title, text) {\n        this.gp.logger.log(title, text);\n    }\n    //Logger\n\n    //Uniques\n    UniquesRegister(tag, value) {\n        this.gp.uniques.register({ tag, value });\n    }\n    UniquesGet(tag) {\n        return this.toUnity(this.gp.uniques.get(tag));\n    }\n    UniquesList() {\n        return this.toUnity(this.gp.uniques.list);\n    }\n    UniquesCheck(tag, value) {\n        this.gp.uniques.register({ tag, value });\n    }\n    UniquesDelete(tag) {\n        return this.toUnity(this.gp.uniques.delete(tag));\n    }\n    //Uniques\n}\n\nfunction formatCustomValue(value) {\n    switch (typeof value) {\n        case 'boolean': {\n            return String(value);\n        }\n        case 'number': {\n            return String(value);\n        }\n        case 'object': {\n            return JSON.stringify(value);\n        }\n        case 'undefined': {\n            return 'undefined';\n        }\n        case 'function': {\n            return 'value is a function';\n        }\n    }\n    return value;\n}\n\nfunction mapChannel(channel = {}) {\n    return {\n        ...channel,\n        ch_private: channel.private\n    };\n}\n\nfunction mapItemWithChannel(item = {}) {\n    return {\n        ...item,\n        channel: mapChannel(item.channel)\n    };\n}\n\nwindow.executeFunctionByName = function (functionName, context /*, args*/) {\n    var args = Array.prototype.slice.call(arguments, 2);\n    args = args.map((element) => {\n        try {\n            return JSON.parse(element);\n        } catch (error) {\n            return element;\n        }\n    });\n    var namespaces = functionName.split('.');\n    var func = namespaces.pop();\n\n    for (var i = 0; i < namespaces.length; i++) {\n        context = context[namespaces[i]];\n    }\n    try {\n        var execute = context[func].apply(context, args);\n    } catch (error) {\n        console.warn(error);\n        return null;\n    }\n\n    return execute;\n};\n\nwindow.returnValueByName = function (functionName, context) {\n    var namespaces = functionName.split('.');\n    var func = namespaces.pop();\n    for (var i = 0; i < namespaces.length; i++) {\n        context = context[namespaces[i]];\n    }\n\n    try {\n        var value = context[func];\n    } catch (error) {\n        console.warn(error);\n        return error;\n    }\n    console.log(value);\n    return value;\n};\n\nwindow.GamePushUnity = GamePushUnity;\n","import GamePushUnity from './GamePushUnity'\n\nwindow.GamePushUnity = GamePushUnity;\n"],"names":["GamePushUnity","constructor","gp","this","player","on","trigger","success","JSON","stringify","fields","map","field","defaultValue","default","leaderboard","achievements","window","focus","achievement","error","gamesCollections","fullscreen","ads","lastRewardedTag","socials","lang","ag","documents","document","content","channels","channel","mapChannel","err","id","result","canLoadMore","items","member","joinRequest","memberLeave","mute","invite","mapItemWithChannel","message","triggers","events","event","playerEvent","segments","segmentTag","schedulers","schedulerInfo","schedulerDayInfo","scheduler","playerScheduler","variables","uniques","uniqueValue","eventName","value","unityInstance","SendMessage","toUnity","getQuery","idOrTag","parseInt","query","tag","String","mapItemsWithChannel","ch_private","private","Language","language","AvatarGenerator","avatarGenerator","PlatformType","platform","type","PlatformHasIntegratedAuth","hasIntegratedAuth","PlatformIsExternalLinksAllowed","isExternalLinksAllowed","AppTitle","app","title","AppDescription","description","AppImage","image","AppUrl","url","AppRequestReview","requestReview","then","rating","AppCanRequestReview","canRequestReview","AppIsAlreadyReviewed","isAlreadyReviewed","AppAddShortcut","addShortcut","AppCanAddShortcut","canAddShortcut","PlayerGetID","PlayerGetScore","score","PlayerSetScore","Number","PlayerAddScore","PlayerGetName","name","PlayerSetName","PlayerGetAvatar","avatar","PlayerSetAvatar","src","PlayerGet","key","get","PlayerSetString","set","PlayerSetNumber","PlayerSetBool","PlayerAdd","add","PlayerHas","has","PlayerSetFlag","Boolean","PlayerToggle","toggle","PlayerGetFieldName","getFieldName","PlayerGetFieldVariantName","getFieldVariantName","PlayerGetFieldVariantAt","index","variant","getField","variants","PlayerGetFieldVariantIndex","findIndex","v","PlayerReset","reset","PlayerRemove","remove","PlayerSync","override","sync","PlayerLoad","load","PlayerLogin","login","PlayerFetchFields","fetchFields","PlayerIsLoggedIn","isLoggedIn","PlayerHasAnyCredentials","hasAnyCredentials","PlayerIsStub","isStub","PlayerGetActiveDays","stats","activeDays","PlayerGetActiveDaysConsecutive","activeDaysConsecutive","PlayerGetPlaytimeToday","playtimeToday","PlayerGetPlaytimeAll","playtimeAll","LeaderboardOpen","orderBy","order","limit","showNearest","withMe","includeFields","displayFields","open","split","o","trim","filter","f","catch","console","warn","LeaderboardFetch","fetch","leaderboardInfo","players","topPlayers","abovePlayers","belowPlayers","LeaderboardFetchPlayerRating","fetchPlayerRating","position","LeaderboardScopedOpen","openScoped","LeaderboardScopedFetch","fetchScoped","leaderboardScopedInfo","LeaderboardScopedPublishRecord","key1","value1","key2","value2","key3","value3","publishRecord","record","LeaderboardScopedFetchPlayerRating","fetchPlayerRatingScoped","AchievementsOpen","AchievementsFetch","achievementsGroups","playerAchievements","AchievementsUnlock","unlock","AchievementsSetProgress","progress","setProgress","AchievementsHas","AchievementsGetProgress","getProgress","PaymentsFetchProducts","payments","fetchProducts","products","playerPurchases","PaymentsPurchase","purchase","PaymentsConsume","consume","PaymentsIsAvailable","isAvailable","PaymentsIsSubscriptionsAvailable","isSubscriptionsAvailable","PaymentsSubscribe","subscribe","PaymentsUnsubscribe","unsubscribe","FullscreenOpen","FullscreenClose","close","FullscreenToggle","AdsShowFullscreen","showFullscreen","AdsShowRewarded","showRewardedVideo","AdsShowPreloader","showPreloader","AdsShowSticky","showSticky","AdsCloseSticky","closeSticky","AdsRefreshSticky","refreshSticky","AdsIsAdblockEnabled","isAdblockEnabled","AdsIsStickyAvailable","isStickyAvailable","AdsIsFullscreenAvailable","isFullscreenAvailable","AdsIsRewardedAvailable","isRewardedAvailable","AdsIsPreloaderAvailable","isPreloaderAvailable","AdsIsStickyPlaying","isStickyPlaying","AdsIsFullscreenPlaying","isFullscreenPlaying","AdsIsRewardedPlaying","isRewardedPlaying","AdsIsPreloaderPlaying","isPreloaderPlaying","AdsIsCountdownOverlayEnabled","isCountdownOverlayEnabled","AdsIsRewardedFailedOverlayEnabled","isRewardedFailedOverlayEnabled","AdsCanShowFullscreenBeforeGamePlay","canShowFullscreenBeforeGamePlay","AnalyticsHit","analytics","hit","AnalyticsGoal","goal","SocialsShare","text","share","SocialsPost","post","SocialsInvite","SocialsJoinCommunity","joinCommunity","SocialsCommunityLink","communityLink","SocialsIsSupportsShare","isSupportsShare","SocialsIsSupportsNativeShare","isSupportsNativeShare","SocialsIsSupportsNativePosts","isSupportsNativePosts","SocialsIsSupportsNativeInvite","isSupportsNativeInvite","SocialsCanJoinCommunity","canJoinCommunity","SocialsIsSupportsNativeCommunityJoin","isSupportsNativeCommunityJoin","SocialsMakeShareLink","shareContent","makeShareUrl","fromId","SocialsGetSharePlayerID","getShareParam","SocialsGetShareContent","GamesCollectionsOpen","GamesCollectionsFetch","ChangeLanguage","changeLanguage","ChangeLanguageByCode","toLowerCase","ChangeAvatarGenerator","generator","changeAvatarGenerator","LoadOverlay","loadOverlay","IsPaused","isPaused","Pause","pause","Resume","resume","GameReady","gameStart","GameplayStart","gameplayStart","GameplayStop","gameplayStop","HappyTime","getNativeSDK","game","happytime","IsMobile","isMobile","IsPortrait","isPortrait","ServerTime","serverTime","IsDev","isDev","IsAllowedOrigin","isAllowedOrigin","VariablesFetch","VariablesHas","VariablesGet","VariablesIsPlatformVariablesAvailable","isPlatformVariablesAvailable","VariablesFetchPlatformVariables","values","params","i","length","parts","log","options","clientParams","fetchPlatformVariables","PlayersFetch","obj","parse","ids","idsList","idsArray","DocumentsOpen","DocumentsFetch","format","FilesUpload","tags","files","upload","FilesUploadUrl","filename","uploadUrl","FilesUploadContent","uploadContent","FilesLoadContent","loadContent","FilesChooseFile","chooseFile","tempUrl","FilesFetch","FilesFetchMore","fetchMore","Channels_Open_Chat","channel_ID","openChat","Channels_Open_Chat_WithTags","Channels_Open_Personal_Chat","player_ID","openPersonalChat","Channels_Open_Feed","openFeed","Channels_IsMainChatEnabled","isMainChatEnabled","Channels_MainChatId","mainChatId","Channels_Join","channelId","password","join","Channels_CancelJoin","cancelJoin","Channels_Leave","leave","Channels_Kick","playerId","kick","Channels_Mute_UnmuteAt","unmuteAt","Channels_Mute_Seconds","seconds","Channels_UnMute","unmute","Channels_SendInvite","sendInvite","Channels_CancelInvite","cancelInvite","Channels_AcceptInvite","acceptInvite","Channels_RejectInvite","rejectInvite","Channels_FetchInvites","offset","fetchInvites","Channels_FetchMoreInvites","fetchMoreInvites","Channels_FetchChannelInvites","fetchChannelInvites","Channels_FetchMoreChannelInvites","fetchMoreChannelInvites","Channels_FetchSentInvites","fetchSentInvites","Channels_FetchMoreSentInvites","fetchMoreSentInvites","Channels_AcceptJoinRequest","acceptJoinRequest","Channels_RejectJoinRequest","rejectJoinRequest","Channels_FetchJoinRequests","fetchJoinRequests","Channels_FetchMoreJoinRequests","fetchMoreJoinRequests","Channels_FetchSentJoinRequests","fetchSentJoinRequests","Channels_FetchMoreSentJoinRequests","fetchMoreSentJoinRequests","Channels_SendMessage","sendMessage","Channels_SendPersonalMessage","sendPersonalMessage","Channels_SendFeedMessage","sendFeedMessage","Channels_EditMessage","messageId","editMessage","Channels_DeleteMessage","deleteMessage","Channels_FetchMessages","fetchMessages","Channels_FetchPersonalMessages","fetchPersonalMessages","Channels_FetchFeedMessages","fetchFeedMessages","Channels_FetchMoreMessages","fetchMoreMessages","Channels_FetchMorePersonalMessages","fetchMorePersonalMessages","Channels_FetchMoreFeedMessages","fetchMoreFeedMessages","Channels_DeleteChannel","deleteChannel","Channels_FetchChannel","fetchChannel","Channels_CreateChannel","createChannel","Channels_UpdateChannel","updateChannel","Channels_FetchChannels","fetchChannels","Channels_FetchMoreChannels","fetchMoreChannels","Channels_FetchMembers","fetchMembers","Channels_FetchMoreMembers","fetchMoreMembers","Triggers_Claim","claim","Triggers_List","list","Triggers_ActivatedList","activatedList","Triggers_GetTrigger","getTrigger","Triggers_IsActivated","isActivated","Triggers_IsClaimed","isClaimed","Events_Join","Events_List","Events_ActiveList","activeList","Events_GetEvent","getEvent","Events_IsActive","Events_IsJoined","isJoined","Segments_List","Segments_Has","Experiments_Map","experiments","Experiments_Has","cohort","Rewards_Give","lazy","rewards","give","Rewards_Accept","accept","Rewards_List","Rewards_GivenList","givenList","Rewards_GetReward","getReward","Rewards_Has","Rewards_HasAccepted","hasAccepted","Rewards_HasUnaccepted","hasUnaccepted","Schedulers_Register","register","Schedulers_ClaimDay","day","claimDay","Schedulers_ClaimDayAdditional","triggerIdOrTag","triggerId","triggerQuery","claimDayAdditional","Schedulers_ClaimAllDay","claimAllDay","Schedulers_ClaimAllDays","claimAllDays","Schedulers_List","Schedulers_ActiveList","Schedulers_GetScheduler","getScheduler","Schedulers_GetSchedulerDay","getSchedulerDay","Schedulers_GetSchedulerCurrentDay","getSchedulerCurrentDay","Schedulers_IsRegistered","isRegistered","Schedulers_IsTodayRewardClaimed","isTodayRewardClaimed","Schedulers_CanClaimDay","canClaimDay","Schedulers_CanClaimDayAdditional","canClaimDayAdditional","Schedulers_CanClaimAllDay","canClaimAllDay","ImagesUpload","images","ImagesUploadUrl","ImagesChooseFile","ImagesFetch","ImagesFetchMore","ImagesResize","resize","width","height","cutBySize","CustomCall","args","callFunc","executeFunctionByName","argArray","replace","CustomReturn","formatCustomValue","CustomGetValue","valueName","returnValueByName","CustomAsyncReturn","LoggerInfo","logger","info","LoggerWarn","LoggerError","LoggerLog","UniquesRegister","UniquesGet","UniquesList","UniquesCheck","UniquesDelete","delete","item","functionName","context","Array","prototype","slice","call","arguments","element","namespaces","func","pop","execute","apply"],"sourceRoot":""}