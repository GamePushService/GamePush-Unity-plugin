{"version":3,"file":"gamepush-unity.js","mappings":"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","sources":["webpack://gamepush_unity/./src/GamePushUnity.js","webpack://gamepush_unity/./src/index.js"],"sourcesContent":["export default class GamePushUnity {\n    constructor(gp) {\n        this.gp = gp;\n\n        this.gp.player.on('change', () => this.trigger('CallPlayerChange'));\n        this.gp.player.on('sync', (success) => {\n            this.trigger(success ? 'CallPlayerSyncComplete' : 'CallPlayerSyncError');\n        });\n        this.gp.player.on('load', (success) => {\n            this.trigger(success ? 'CallPlayerLoadComplete' : 'CallPlayerLoadError');\n        });\n        this.gp.player.on('login', (success) => {\n            this.trigger(success ? 'CallPlayerLoginComplete' : 'CallPlayerLoginError');\n        });\n\n        this.gp.on('event:connect', () => this.trigger('CallPlayerConnect'))\n\n        this.gp.player.on('fetchFields', (success) => {\n            if (success) {\n                this.trigger('CallPlayerFetchFieldsComplete', JSON.stringify(this.gp.player.fields.map((field) => ({ ...field, defaultValue: field.default }))));\n            } else {\n                this.trigger('CallPlayerFetchFieldsError');\n            }\n        });\n\n        // leaderboard\n        this.gp.leaderboard.on('open', () => this.trigger('CallLeaderboardOpen'));\n        this.gp.leaderboard.on('close', () => this.trigger('CallLeaderboardClose'));\n\n        // achievements\n        this.gp.achievements.on('open', () => this.trigger('CallAchievementsOpen'));\n        this.gp.achievements.on('close', () => {\n            this.trigger('CallAchievementsClose');\n            window.focus();\n        });\n\n        this.gp.achievements.on('unlock', (achievement) => this.trigger('CallAchievementsUnlock', achievement));\n        this.gp.achievements.on('error:unlock', (error) => this.trigger('CallAchievementsUnlockError', error));\n\n        // games collections\n        this.gp.gamesCollections.on('open', () => this.trigger('CallGamesCollectionsOpen'));\n        this.gp.gamesCollections.on('close', () => {\n            this.trigger('CallGamesCollectionsClose');\n            window.focus();\n        });\n\n        // fullscreen\n        this.gp.fullscreen.on('open', () => this.trigger('CallFullscreenOpen'));\n        this.gp.fullscreen.on('close', () => this.trigger('CallFullscreenClose'));\n        this.gp.fullscreen.on('change', () => this.trigger('CallFullscreenChange'));\n\n        // ads\n        this.gp.ads.on('start', () => this.trigger('CallAdsStart'));\n        this.gp.ads.on('close', (success) => {\n            this.trigger('CallAdsClose', success);\n            window.focus();\n        });\n\n        this.gp.ads.on('fullscreen:start', () => this.trigger('CallAdsFullscreenStart'));\n        this.gp.ads.on('fullscreen:close', (success) => this.trigger('CallAdsFullscreenClose', success));\n\n        this.gp.ads.on('preloader:start', () => this.trigger('CallAdsPreloaderStart'));\n        this.gp.ads.on('preloader:close', (success) => this.trigger('CallAdsPreloaderClose', success));\n\n        this.gp.ads.on('rewarded:start', () => this.trigger('CallAdsRewardedStart'));\n        this.gp.ads.on('rewarded:close', (success) => this.trigger('CallAdsRewardedClose', (success)));\n        this.gp.ads.on('rewarded:reward', () => this.trigger('CallAdsRewardedReward', this.lastRewardedTag));\n\n        this.gp.ads.on('sticky:start', () => this.trigger('CallAdsStickyStart'));\n        this.gp.ads.on('sticky:close', () => this.trigger('CallAdsStickyClose'));\n        this.gp.ads.on('sticky:refresh', () => this.trigger('CallAdsStickyRefresh'));\n        this.gp.ads.on('sticky:render', () => this.trigger('CallAdsStickyRender'));\n\n        // socials\n        this.gp.socials.on('share', (success) => {\n            this.trigger('CallSocialsShare', success);\n            window.focus();\n        });\n        this.gp.socials.on('post', (success) => {\n            this.trigger('CallSocialsPost', success);\n            window.focus();\n        });\n        this.gp.socials.on('invite', (success) => {\n            this.trigger('CallSocialsInvite', success);\n            window.focus();\n        });\n        this.gp.socials.on('joinCommunity', (success) => {\n            this.trigger('CallSocialsJoinCommunity', success);\n            window.focus();\n        });\n\n        // gp\n        this.gp.on('change:language', (lang) => this.trigger('CallChangeLanguage', lang));\n        this.gp.on('change:avatarGenerator', (ag) => this.trigger('CallChangeAvatarGenerator', ag));\n        this.gp.on('pause', () => this.trigger('CallOnPause'));\n        this.gp.on('resume', () => this.trigger('CallOnResume'));\n        \n        //device\n        this.gp.on('change:orientation', () => this.trigger('CallChangeOrientation'));\n        \n        // app\n        //this.gp.app.on('requestReview', (result) => this.trigger('CallReviewResult', result));\n        //this.gp.app.on('addShortcut', (success) => this.trigger('CallAddShortcut', success));\n\n        //documents\n        this.gp.documents.on('open', () => this.trigger('CallOnDocumentsOpen'));\n        this.gp.documents.on('close', () => {\n            this.trigger('CallOnDocumentsClose');\n            window.focus();\n        });\n\n        this.gp.documents.on('fetch', (document) => this.trigger('CallOnDocumentsFetchSuccess', document.content));\n        this.gp.documents.on('error:fetch', () => this.trigger('CallOnDocumentsFetchError'));\n\n\n        // channels\n        this.gp.channels.on('createChannel', (channel) => {\n            this.trigger('CallOnCreateChannel', JSON.stringify(mapChannel(channel)));\n        });\n        this.gp.channels.on('error:createChannel', (err) => this.trigger('CallOnCreateChannelError'));\n\n        this.gp.channels.on('updateChannel', (channel) => {\n            this.trigger('CallOnUpdateChannel', JSON.stringify(mapChannel(channel)));\n        });\n        this.gp.channels.on('error:updateChannel', (err) => this.trigger('CallOnUpdateChannelError'));\n\n        this.gp.channels.on('deleteChannel', () => this.trigger('CallOnDeleteChannelSuccess'));\n        this.gp.channels.on('event:deleteChannel', (channel) => { this.trigger('CallOnDeleteChannelEvent', channel.id); });\n        this.gp.channels.on('error:deleteChannel', (err) => this.trigger('CallOnDeleteChannelError'));\n\n        this.gp.channels.on('fetchChannel', (channel) => {\n            this.trigger('CallOnFetchChannel', JSON.stringify(mapChannel(channel)));\n        });\n        this.gp.channels.on('error:fetchChannel', (err) => this.trigger('CallOnFetchChannelError'));\n\n        this.gp.channels.on('fetchChannels', (result) => {\n            this.trigger('CallOnFetchChannelsCanLoadMore', result.canLoadMore);\n            this.trigger('CallOnFetchChannels', JSON.stringify(result.items.map(mapChannel)));\n        });\n        this.gp.channels.on('error:fetchChannels', (err) => this.trigger('CallOnFetchChannelsError'));\n\n        this.gp.channels.on('fetchMoreChannels', (result) => {\n            this.trigger('CallOnFetchMoreChannelsCanLoadMore', result.canLoadMore);\n            this.trigger('CallOnFetchMoreChannels', JSON.stringify(result.items.map(mapChannel)));\n        });\n        this.gp.channels.on('error:fetchMoreChannels', (err) => this.trigger('CallOnFetchMoreChannelsError'));\n\n        gp.channels.on('openChat', () => this.trigger('CallOnOpenChat'));\n        gp.channels.on('closeChat', () => this.trigger('CallOnCloseChat'));\n        gp.channels.on('error:openChat', (err) => this.trigger('CallOnOpenChatError'));\n\n        this.gp.channels.on('join', () => this.trigger('CallOnJoinSuccess'));\n        this.gp.channels.on('event:join', (member) => { this.trigger('CallOnJoinEvent', JSON.stringify(member)); });\n        this.gp.channels.on('error:join', (err) => this.trigger('CallOnJoinError'));\n\n        this.gp.channels.on('event:joinRequest', (joinRequest) => { this.trigger('CallOnJoinRequest', JSON.stringify(joinRequest)); });\n\n        this.gp.channels.on('cancelJoin', () => this.trigger('CallOnCancelJoinSuccess'));\n        this.gp.channels.on('event:cancelJoin', (joinRequest) => { this.trigger('CallOnCancelJoinEvent', JSON.stringify(joinRequest)); });\n        this.gp.channels.on('error:cancelJoin', (err) => this.trigger('CallOnCancelJoinError'));\n\n        this.gp.channels.on('leave', () => this.trigger('CallOnLeaveSuccess'));\n        this.gp.channels.on('event:leave', (memberLeave) => { this.trigger('CallOnLeaveEvent', JSON.stringify(memberLeave)); });\n        this.gp.channels.on('error:leave', (err) => this.trigger('CallOnLeaveError'));\n\n        this.gp.channels.on('kick', () => this.trigger('CallOnKick'));\n        this.gp.channels.on('error:kick', (err) => this.trigger('CallOnKickError'));\n\n        this.gp.channels.on('fetchMembers', (result) => {\n            this.trigger('CallOnFetchMembersCanLoadMore', result.canLoadMore);\n            this.trigger('CallOnFetchMembers', JSON.stringify(result.items));\n        });\n        this.gp.channels.on('error:fetchMembers', (err) => this.trigger('CallOnFetchMembersError'));\n\n        this.gp.channels.on('fetchMoreMembers', (result) => {\n            this.trigger('CallOnFetchMoreMembersCanLoadMore', result.canLoadMore);\n            this.trigger('CallOnFetchMoreMembers', JSON.stringify(result.items));\n        });\n        this.gp.channels.on('error:fetchMoreMembers', (err) => this.trigger('CallOnFetchMoreMembersError'));\n\n        this.gp.channels.on('mute', () => this.trigger('CallOnMuteSuccess'));\n        this.gp.channels.on('event:mute', (mute) => { this.trigger('CallOnMuteEvent', JSON.stringify(mute)); });\n        this.gp.channels.on('error:mute', (err) => this.trigger('CallOnMuteError'));\n\n        this.gp.channels.on('unmute', () => this.trigger('CallOnUnmuteSuccess'));\n        this.gp.channels.on('event:unmute', (mute) => { this.trigger('CallOnUnmuteEvent', JSON.stringify(mute)); });\n        this.gp.channels.on('error:unmute', (err) => this.trigger('CallOnUnmuteError'));\n\n        this.gp.channels.on('sendInvite', () => this.trigger('CallOnSendInvite'));\n        this.gp.channels.on('error:sendInvite', (err) => this.trigger('CallOnSendInviteError'));\n\n        this.gp.channels.on('event:invite', (invite) => { this.trigger('CallOnInvite', JSON.stringify(invite)); });\n\n        this.gp.channels.on('cancelInvite', () => this.trigger('CallOnCancelInviteSuccess'));\n        this.gp.channels.on('event:cancelInvite', (invite) => {\n            this.trigger('CallOnCancelInviteEvent', JSON.stringify(invite));\n        });\n        this.gp.channels.on('error:cancelInvite', (err) => this.trigger('CallOnCancelInviteError'));\n\n        this.gp.channels.on('acceptInvite', () => this.trigger('CallOnAcceptInvite'));\n        this.gp.channels.on('error:acceptInvite', (err) => this.trigger('CallOnAcceptInviteError'));\n\n\n        this.gp.channels.on('rejectInvite', () => this.trigger('CallOnRejectInviteSuccess'));\n        this.gp.channels.on('event:rejectInvite', (invite) => { this.trigger('CallOnRejectInviteEvent', JSON.stringify(invite)); });\n        this.gp.channels.on('error:rejectInvite', (err) => this.trigger('CallOnRejectInviteError'));\n\n        this.gp.channels.on('fetchInvites', (result) => {\n            this.trigger('CallOnFetchInvitesCanLoadMore', result.canLoadMore);\n            this.trigger('CallOnFetchInvites', JSON.stringify(result.items.map(mapItemWithChannel)));\n        });\n        this.gp.channels.on('error:fetchInvites', (err) => this.trigger('CallOnFetchInvitesError'));\n\n\n        this.gp.channels.on('fetchMoreInvites', (result) => {\n            this.trigger('CallOnFetchMoreInvitesCanLoadMore', result.canLoadMore);\n            this.trigger('CallOnFetchMoreInvites', JSON.stringify(result.items.map(mapItemWithChannel)));\n        });\n        this.gp.channels.on('error:fetchMoreInvites', (err) => this.trigger('CallOnFetchMoreInvitesError'));\n\n\n        this.gp.channels.on('fetchChannelInvites', (result) => {\n            this.trigger('CallOnFetchChannelInvitesCanLoadMore', result.canLoadMore);\n            this.trigger('CallOnFetchChannelInvites', JSON.stringify(result.items));\n        });\n        this.gp.channels.on('error:fetchChannelInvites', (err) => this.trigger('CallOnFetchChannelInvitesError'));\n\n\n        this.gp.channels.on('fetchMoreChannelInvites', (result) => {\n            this.trigger('CallOnFetchMoreChannelInvitesCanLoadMore', result.canLoadMore);\n            this.trigger('CallOnFetchMoreChannelInvites', JSON.stringify(result.items));\n        });\n        this.gp.channels.on('error:fetchMoreChannelInvites', (err) => this.trigger('CallOnFetchMoreChannelInvitesError'));\n\n\n        this.gp.channels.on('fetchSentInvites', (result) => {\n            this.trigger('CallOnFetchSentInvitesCanLoadMore', result.canLoadMore);\n            this.trigger('CallOnFetchSentInvites', JSON.stringify(result.items.map(mapItemWithChannel)));\n        });\n        this.gp.channels.on('error:fetchSentInvites', (err) => this.trigger('CallOnFetchSentInvitesError'));\n\n\n        this.gp.channels.on('fetchMoreSentInvites', (result) => {\n            this.trigger('CallOnFetchMoreSentInvitesCanLoadMore', result.canLoadMore);\n            this.trigger('CallOnFetchMoreSentInvites', JSON.stringify(result.items.map(mapItemWithChannel)));\n        });\n        this.gp.channels.on('error:fetchMoreSentInvites', (err) => this.trigger('CallOnFetchMoreSentInvitesError'));\n\n\n        this.gp.channels.on('acceptJoinRequest', () => this.trigger('CallOnAcceptJoinRequest'));\n        this.gp.channels.on('error:acceptJoinRequest', (err) => this.trigger('CallOnAcceptJoinRequestError'));\n\n\n        this.gp.channels.on('rejectJoinRequest', () => this.trigger('CallOnRejectJoinRequestSuccess'));\n        this.gp.channels.on('event:rejectJoinRequest', (joinRequest) => {\n            this.trigger('CallOnRejectJoinRequestEvent', JSON.stringify(joinRequest));\n        });\n        this.gp.channels.on('error:rejectJoinRequest', (err) => this.trigger('CallOnRejectJoinRequestError'));\n\n\n        this.gp.channels.on('fetchJoinRequests', (result) => {\n            this.trigger('CallOnFetchJoinRequestsCanLoadMore', result.canLoadMore);\n            this.trigger('CallOnFetchJoinRequests', JSON.stringify(result.items));\n        });\n        this.gp.channels.on('error:fetchJoinRequests', (err) => this.trigger('CallOnFetchJoinRequestsError'));\n\n\n\n        this.gp.channels.on('fetchMoreJoinRequests', (result) => {\n            this.trigger('CallOnFetchMoreJoinRequestsCanLoadMore', result.canLoadMore);\n            this.trigger('CallOnFetchMoreJoinRequests', JSON.stringify(result.items));\n        });\n        this.gp.channels.on('error:fetchMoreJoinRequests', (err) => this.trigger('CallOnFetchMoreJoinRequestsError'));\n\n\n\n        this.gp.channels.on('fetchSentJoinRequests', (result) => {\n            this.trigger('CallOnFetchSentJoinRequestsCanLoadMore', result.canLoadMore);\n            this.trigger('CallOnFetchSentJoinRequests', JSON.stringify(result.items.map(mapItemWithChannel)));\n        });\n        this.gp.channels.on('error:fetchSentJoinRequests', (err) => this.trigger('CallOnFetchSentJoinRequestsError'));\n\n\n        this.gp.channels.on('fetchMoreSentJoinRequests', (result) => {\n            this.trigger('CallOnFetchMoreSentJoinRequestsCanLoadMore', result.canLoadMore);\n            this.trigger('CallOnFetchMoreSentJoinRequests', JSON.stringify(result.items.map(mapItemWithChannel)));\n        });\n        this.gp.channels.on('error:fetchMoreSentJoinRequests', (err) => this.trigger('CallOnFetchMoreSentJoinRequestsError'));\n\n        this.gp.channels.on('sendMessage', (message) => { this.trigger('CallOnSendMessage', JSON.stringify(message)); });\n        this.gp.channels.on('error:sendMessage', (err) => this.trigger('CallOnSendMessageError'));\n\n        this.gp.channels.on('event:message', (message) => { this.trigger('CallOnMessage', JSON.stringify(message)); });\n\n        this.gp.channels.on('editMessage', (message) => { this.trigger('CallOnEditMessageSuccess', JSON.stringify(message)); });\n        this.gp.channels.on('event:editMessage', (message) => { this.trigger('CallOnEditMessageEvent', JSON.stringify(message)); });\n        this.gp.channels.on('error:editMessage', (err) => this.trigger('CallOnEditMessageError'));\n\n        this.gp.channels.on('deleteMessage', () => this.trigger('CallOnDeleteMessageSuccess'));\n        this.gp.channels.on('event:deleteMessage', (message) => { this.trigger('CallOnDeleteMessageEvent', JSON.stringify(message)); });\n        this.gp.channels.on('error:deleteMessage', (err) => this.trigger('CallOnDeleteMessageError'));\n\n        //triggers\n        this.gp.triggers.on('activate', ({ trigger }) => {this.trigger('CallOnTriggerActivate', JSON.stringify(trigger)); });\n        this.gp.triggers.on('claim', ({ trigger }) => {this.trigger('CallOnTriggerClaim', JSON.stringify(trigger)); });\n        this.gp.triggers.on('error:claim', (err) => {this.trigger('CallOnTriggerClaimError', JSON.stringify(err)); });\n\n        //events\n        this.gp.events.on('join', ({ event, playerEvent }) => {this.trigger('CallOnEventJoin', JSON.stringify(playerEvent)); });\n        this.gp.events.on('error:join', (err) => {this.trigger('CallOnEventJoinError', err); });\n\n        //segments\n        this.gp.segments.on('enter', (segmentTag) => {this.trigger('CallOnSegmentEnter', segmentTag);});\n        this.gp.segments.on('leave', (segmentTag) => {this.trigger('CallOnSegmentLeave', segmentTag);});\n\n        //rewards\n        //this.gp.rewards.on('give', ({ reward, playerReward }) => {this.trigger('CallOnRewardsGive', JSON.stringify({ reward, playerReward })); });\n        //this.gp.rewards.on('error:give', (err) => {this.trigger('CallOnRewardsGiveError', err); });\n        //this.gp.rewards.on('accept', ({ reward, playerReward }) => {this.trigger('CallOnRewardsAccept', JSON.stringify({ reward, playerReward })); });\n        //this.gp.rewards.on('error:accept', (err) => {this.trigger('CallOnRewardsAcceptError', err);  });\n\n        //Schedulers\n        this.gp.schedulers.on('register', (schedulerInfo) => {\n            this.trigger('CallOnSchedulerRegister', JSON.stringify(schedulerInfo)); \n        });\n        this.gp.schedulers.on('error:register', (err) => {this.trigger('CallOnSchedulerRegisterError', err); });\n        this.gp.schedulers.on('claimDay', (schedulerDayInfo) => {this.trigger('CallOnSchedulerClaimDay', JSON.stringify(schedulerDayInfo)); });\n        this.gp.schedulers.on('error:claimDay', (err) => {this.trigger('CallOnSchedulerClaimDayError', err); });\n        this.gp.schedulers.on('claimDayAdditional', (schedulerDayInfo) => {this.trigger('CallOnSchedulerClaimDayAdditional', JSON.stringify(schedulerDayInfo)); });\n        this.gp.schedulers.on('error:claimDayAdditional', (err) => {this.trigger('CallOnSchedulerClaimDayAdditionalError', err); });\n        this.gp.schedulers.on('claimAllDay', (schedulerDayInfo) => {this.trigger('CallOnSchedulerClaimAllDay', JSON.stringify(schedulerDayInfo)); });\n        this.gp.schedulers.on('error:claimAllDay', (err) => {this.trigger('CallOnSchedulerClaimAllDayError', err); });\n        this.gp.schedulers.on('claimAllDays', (schedulerDayInfo) => {this.trigger('CallOnSchedulerClaimAllDays', JSON.stringify(schedulerDayInfo)); });\n        this.gp.schedulers.on('error:claimAllDays', (err) => {this.trigger('CallOnSchedulerClaimAllDaysError', err); });\n        this.gp.schedulers.on('join', ({ scheduler, playerScheduler }) => {this.trigger('CallOnSchedulerJoin', JSON.stringify(playerScheduler)); });\n        this.gp.schedulers.on('error:join', (err) => {this.trigger('CallOnSchedulerJoinError', err);});\n\n        //Variables\n        this.gp.variables.on('fetchPlatformVariables', (variables) => {this.trigger('CallOnFetchPlatformVariables', JSON.stringify(variables));});\n        this.gp.variables.on('error:fetchPlatformVariables', (error) => {this.trigger('CallOnFetchPlatformVariablesError', error);});\n    }\n\n    trigger(eventName, value) {\n        if (window.unityInstance !== null) {\n            window.unityInstance.SendMessage('GamePushSDK', eventName, this.toUnity(value));\n        }\n    }\n\n    getQuery(idOrTag){\n        const id = parseInt(idOrTag, 10) || 0;\n        return query = id > 0 ? { id } : { tag: idOrTag };\n    }\n\n    toUnity(value) {\n        switch (typeof (value)) {\n            case 'boolean': {\n                return String(value);\n            }\n            case 'number': {\n                return value;\n            }\n            case 'string': {\n                return value;\n            }\n            case 'object': {\n                return JSON.stringify(value);\n            }\n        }\n        return value;\n    }\n\n    mapItemsWithChannel(items = {}) {\n        return {\n            ...items,\n            ch_private: items.private\n        };\n    }\n\n    Language() {\n        return this.gp.language;\n    }\n    AvatarGenerator() {\n        return this.gp.avatarGenerator;\n    }\n    PlatformType() {\n        return this.gp.platform.type;\n    }\n    PlatformHasIntegratedAuth() {\n        return this.toUnity(this.gp.platform.hasIntegratedAuth);\n    }\n    PlatformIsExternalLinksAllowed() {\n        return this.toUnity(this.gp.platform.isExternalLinksAllowed);\n    }\n\n    AppTitle() {\n        return this.gp.app.title;\n    }\n    AppDescription() {\n        return this.gp.app.description;\n    }\n    AppImage() {\n        return this.gp.app.image;\n    }\n    AppUrl() {\n        return this.gp.app.url;\n    }\n    AppRequestReview(){\n        return this.gp.app\n        .requestReview()\n        .then((result) => {\n            if(result.success){\n                this.trigger('CallReviewResult', result.rating);\n            }\n            else{\n                this.trigger('CallReviewClose', result.error);\n            }\n            \n        });\n    }\n\n    AppCanRequestReview(){\n        return this.toUnity(this.gp.app.canRequestReview); \n    }\n\n    AppIsAlreadyReviewed(){\n        return this.toUnity(this.gp.app.isAlreadyReviewed); \n    }\n\n    AppAddShortcut(){\n        return this.gp.app\n        .addShortcut()\n        .then((success) => this.trigger('CallAddShortcut', success));\n    }\n\n    AppCanAddShortcut(){\n        return this.toUnity(this.gp.app.canAddShortcut); \n    }\n\n\n    // PLAYER \n\n    PlayerGetID() {\n        return this.gp.player.id;\n    }\n\n    PlayerGetScore() {\n        return this.gp.player.score;\n    }\n    PlayerSetScore(score) {\n        this.gp.player.score = Number(score);\n    }\n    PlayerAddScore(score) {\n        this.gp.player.score += Number(score);\n    }\n\n    PlayerGetName() {\n        return this.gp.player.name;\n    }\n    PlayerSetName(name) {\n        this.gp.player.name = name;\n    }\n\n    PlayerGetAvatar() {\n        return this.gp.player.avatar;\n    }\n    PlayerSetAvatar(src) {\n        this.gp.player.avatar = src;\n    }\n\n    PlayerGet(key) {\n        return this.toUnity(this.gp.player.get(key));\n    }\n\n    PlayerSetString(key, value) {\n        this.gp.player.set(key, value);\n    }\n    PlayerSetNumber(key, value) {\n        this.gp.player.set(key, value);\n    }\n    PlayerSetBool(key, value) {\n        if (value == \"True\")\n            value = true;\n        else if (value == \"False\")\n            value = false;\n        this.gp.player.set(key, value);\n    }\n    PlayerAdd(key, value) {\n        this.gp.player.add(key, Number(value));\n    }\n\n    PlayerHas(key) {\n        return this.toUnity(this.gp.player.has(key));\n    }\n\n    PlayerSetFlag(key, value) {\n        this.gp.player.set(key, !Boolean(value));\n    }\n    PlayerToggle(key) {\n        this.gp.player.toggle(key);\n    }\n\n    PlayerGetFieldName(key) {\n        return this.gp.player.getFieldName(key);\n    }\n    PlayerGetFieldVariantName(key, value) {\n        return this.gp.player.getFieldVariantName(key, value);\n    }\n    PlayerGetFieldVariantAt(key, index) {\n        const variant = this.gp.player.getField(key).variants[index];\n        return variant ? variant.value : '';\n    }\n    PlayerGetFieldVariantIndex(key, value) {\n        return this.gp.player.getField(key).variants.findIndex((v) => v.value === value);\n    }\n\n    PlayerReset() {\n        this.gp.player.reset();\n    }\n    PlayerRemove() {\n        this.gp.player.remove();\n    }\n    PlayerSync(override = false) {\n        return this.gp.player.sync({ override: Boolean(override) });\n    }\n    PlayerLoad() {\n        return this.gp.player.load();\n    }\n    PlayerLogin() {\n        return this.gp.player.login();\n    }\n    PlayerFetchFields() {\n        this.gp.player.fetchFields();\n    }\n\n    PlayerIsLoggedIn() {\n        return this.toUnity(this.gp.player.isLoggedIn);\n    }\n\n    PlayerHasAnyCredentials(key) {\n        return this.toUnity(this.gp.player.hasAnyCredentials);\n    }\n\n    PlayerIsStub(key) {\n        return this.toUnity(this.gp.player.isStub);\n    }\n\n    PlayerGetActiveDays() {\n        return this.toUnity(this.gp.player.stats.activeDays);\n    }\n\n    PlayerGetActiveDaysConsecutive() {\n        return this.toUnity(this.gp.player.stats.activeDaysConsecutive);\n    }\n\n    PlayerGetPlaytimeToday() {\n        return this.toUnity(this.gp.player.stats.playtimeToday);\n    }\n\n    PlayerGetPlaytimeAll() {\n        return this.toUnity(this.gp.player.stats.playtimeAll);\n    }\n\n\n    // LEADERBOARD \n\n    LeaderboardOpen(orderBy, order, limit, showNearest, withMe, includeFields, displayFields) {\n        return this.gp.leaderboard\n            .open({\n                id: this.gp.player.id,\n                orderBy: orderBy\n                    .split(',')\n                    .map((o) => o.trim())\n                    .filter((f) => f),\n                order: order,\n                limit: limit,\n                includeFields: includeFields\n                    .split(',')\n                    .map((o) => o.trim())\n                    .filter((f) => f),\n                displayFields: displayFields\n                    .split(',')\n                    .map((o) => o.trim())\n                    .filter((f) => f),\n                withMe: withMe,\n                showNearest: showNearest,\n            })\n            .catch(console.warn);\n    }\n\n    LeaderboardFetch(tag, orderBy, order, limit, showNearest, withMe, includeFields) {\n        return this.gp.leaderboard\n            .fetch({\n                id: this.gp.player.id,\n                orderBy: orderBy\n                    .split(',')\n                    .map((o) => o.trim())\n                    .filter((f) => f),\n                order: order,\n                limit: limit,\n                includeFields: includeFields\n                    .split(',')\n                    .map((o) => o.trim())\n                    .filter((f) => f),\n                withMe: withMe,\n                showNearest: showNearest,\n            })\n            .then((leaderboardInfo) => {\n                this.trigger('CallLeaderboardFetchTag', tag);\n                this.trigger('CallLeaderboardFetch', JSON.stringify(leaderboardInfo.players));\n                this.trigger('CallLeaderboardFetchTop', JSON.stringify(leaderboardInfo.topPlayers));\n                this.trigger('CallLeaderboardFetchAbove', JSON.stringify(leaderboardInfo.abovePlayers));\n                this.trigger('CallLeaderboardFetchBelow', JSON.stringify(leaderboardInfo.belowPlayers));\n                this.trigger('CallLeaderboardFetchOnlyPlayer', JSON.stringify(leaderboardInfo.player));\n            })\n            .catch((err) => {\n                console.warn(err);\n                this.trigger('CallLeaderboardFetchError');\n            });\n    }\n\n    LeaderboardFetchPlayerRating(tag, orderBy, order) {\n        return this.gp.leaderboard\n            .fetchPlayerRating({\n                id: this.gp.player.id,\n                orderBy: orderBy\n                    .split(',')\n                    .map((o) => o.trim())\n                    .filter((f) => f),\n                order,\n            })\n            .then((result) => {\n                this.trigger('CallLeaderboardFetchPlayerTag', tag);\n                this.trigger('CallLeaderboardFetchPlayerRating', result.player.position);\n            })\n            .catch((err) => {\n                console.warn(err);\n                this.trigger('CallLeaderboardFetchPlayerError');\n            });\n    }\n\n\n\n\n    // LEADERBOARD SCOPED \n\n    LeaderboardScopedOpen(idOrTag, variant, order, limit, showNearest, includeFields, displayFields, withMe) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? { id } : { tag: idOrTag };\n        return this.gp.leaderboard\n            .openScoped({\n                ...query,\n                variant,\n                order,\n                limit: limit,\n                includeFields: includeFields\n                    .split(',')\n                    .map((o) => o.trim())\n                    .filter((f) => f),\n                displayFields: displayFields\n                    .split(',')\n                    .map((o) => o.trim())\n                    .filter((f) => f),\n                withMe: withMe,\n                showNearest: showNearest,\n            })\n            .catch(console.warn);\n    }\n\n    LeaderboardScopedFetch(idOrTag, variant, order, limit, showNearest, includeFields, withMe) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? { id } : { tag: idOrTag };\n        return this.gp.leaderboard\n            .fetchScoped({\n                ...query,\n                variant: variant,\n                order: order,\n                limit: limit,\n                includeFields: includeFields\n                    .split(',')\n                    .map((o) => o.trim())\n                    .filter((f) => f),\n                withMe,\n                showNearest: showNearest,\n            })\n            .then((leaderboardScopedInfo) => {\n                this.trigger('CallLeaderboardScopedFetchTag', idOrTag);\n                this.trigger('CallLeaderboardScopedFetchVariant', variant);\n                this.trigger('CallLeaderboardScopedFetch', JSON.stringify(leaderboardScopedInfo.players));\n                this.trigger('CallLeaderboardScopedFetchTop', JSON.stringify(leaderboardScopedInfo.topPlayers));\n                this.trigger('CallLeaderboardScopedFetchAbove', JSON.stringify(leaderboardScopedInfo.abovePlayers));\n                this.trigger('CallLeaderboardScopedFetchBelow', JSON.stringify(leaderboardScopedInfo.belowPlayers));\n                this.trigger('CallLeaderboardScopedFetchOnlyPlayer', JSON.stringify(leaderboardScopedInfo.player));\n            })\n            .catch((err) => {\n                console.warn(err);\n                this.trigger('CallLeaderboardScopedFetchError');\n            });\n    }\n\n    LeaderboardScopedPublishRecord(idOrTag, variant, override, key1, value1, key2, value2, key3, value3) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? { id } : { tag: idOrTag };\n        return this.gp.leaderboard\n            .publishRecord({\n                ...query,\n                variant,\n                override: Boolean(override),\n                record: {\n                    [key1]: value1,\n                    [key2]: value2,\n                    [key3]: value3,\n                },\n            })\n            .then(() => {\n                this.trigger('CallLeaderboardScopedPublishRecordComplete');\n            })\n            .catch((err) => {\n                console.warn(err);\n                this.trigger('CallLeaderboardScopedPublishRecordError');\n            });\n    }\n\n    LeaderboardScopedFetchPlayerRating(idOrTag, variant, includeFields) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? { id } : { tag: idOrTag };\n        return this.gp.leaderboard\n            .fetchPlayerRatingScoped({\n                ...query,\n                variant,\n                includeFields: includeFields\n                    .split(',')\n                    .map((o) => o.trim())\n                    .filter((f) => f),\n            })\n            .then((result) => {\n                this.trigger('CallLeaderboardScopedFetchPlayerTag', idOrTag);\n                this.trigger('CallLeaderboardScopedFetchPlayerVariant', variant);\n                this.trigger('CallLeaderboardScopedFetchPlayerRating', result.player.position);\n            })\n            .catch((err) => {\n                console.warn(err);\n                this.trigger('CallLeaderboardFetchPlayerError');\n            });\n    }\n\n\n    // ACHIEVEMENTS\n    AchievementsOpen() {\n        return this.gp.achievements.open().catch(console.warn);\n    }\n    AchievementsFetch() {\n        return this.gp.achievements\n            .fetch()\n            .then((result) => {\n                this.trigger('CallAchievementsFetch', JSON.stringify(result.achievements));\n                this.trigger('CallAchievementsFetchGroups', JSON.stringify(result.achievementsGroups));\n                this.trigger('CallPlayerAchievementsFetch', JSON.stringify(result.playerAchievements));\n            })\n            .catch((err) => {\n                console.warn(err);\n                this.trigger('CallAchievementsFetchError');\n            });\n    }\n    AchievementsUnlock(idOrTag) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? { id } : { tag: idOrTag };\n        return this.gp.achievements\n            .unlock(query)\n            .then((result) => {\n                if (result.success) {\n                    this.trigger('CallAchievementsUnlock', result.achievement);\n                    return;\n                }\n\n                this.trigger('CallAchievementsUnlockError');\n            })\n\n            .catch((err) => {\n                console.warn(err);\n                this.trigger('CallAchievementsUnlockError');\n            });\n    }\n\n    AchievementsSetProgress(idOrTag, progress) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? { id } : { tag: idOrTag };\n\n        return this.gp.achievements\n            .setProgress({ ...query, progress })\n            .then((result) => {\n                if (result.success) {\n                    this.trigger('CallAchievementsProgress', idOrTag);\n                    return;\n                }\n                this.trigger('CallAchievementsProgressError');\n            })\n            .catch((err) => {\n                console.warn(err);\n                this.trigger('CallAchievementsProgressError');\n            });\n    }\n\n    AchievementsHas(idOrTag) {\n        return this.toUnity(this.gp.achievements.has(idOrTag));\n    }\n    AchievementsGetProgress(idOrTag) {\n        return this.gp.achievements.getProgress(idOrTag);\n    }\n\n\n\n    // PAYMENTS \n    PaymentsFetchProducts() {\n        return this.gp.payments\n            .fetchProducts()\n            .then((result) => {\n                this.trigger('CallPaymentsFetchProducts', JSON.stringify(result.products));\n                this.trigger('CallPaymentsFetchPlayerPurcahses', JSON.stringify(result.playerPurchases));\n            })\n            .catch((err) => {\n                console.warn(err);\n                this.trigger('CallPaymentsFetchProductsError');\n            });\n    }\n    PaymentsPurchase(idOrTag) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? { id } : { tag: idOrTag };\n        return this.gp.payments\n            .purchase(query)\n            .then((result) => {\n\n                if (result.success) {\n                    this.trigger('CallPaymentsPurchase', idOrTag);\n                    window.focus();\n                    return;\n                }\n\n                this.trigger('CallPaymentsPurchaseError');\n\n                window.focus();\n            })\n            .catch((err) => {\n                console.warn(err);\n                this.trigger('CallPaymentsPurchaseError');\n                window.focus();\n            });\n    }\n    PaymentsConsume(idOrTag) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? { id } : { tag: idOrTag };\n        return this.gp.payments\n            .consume(query)\n            .then((result) => {\n                if (result.success) {\n                    this.trigger('CallPaymentsConsume', idOrTag);\n                    window.focus();\n                    return;\n                }\n\n                this.trigger('CallPaymentsConsumeError');\n            })\n            .catch((err) => {\n                console.warn(err);\n                this.trigger('CallPaymentsConsumeError');\n            });\n    }\n    PaymentsIsAvailable() {\n        return this.toUnity(this.gp.payments.isAvailable);\n    }\n\n\n    // Subscriptions\n    PaymentsIsSubscriptionsAvailable() {\n        return this.toUnity(this.gp.payments.isSubscriptionsAvailable);\n    }\n\n    PaymentsSubscribe(idOrTag) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? { id } : { tag: idOrTag };\n        return this.gp.payments.subscribe(query)\n            .then((result) => {\n                if (result.success) {\n                    this.trigger('CallPaymentsSubscribeSuccess', idOrTag);\n                } else {\n                    this.trigger('CallPaymentsSubscribeError');\n                }\n            })\n            .catch((err) => {\n                console.warn(err);\n                this.trigger('CallPaymentsSubscribeError');\n            });\n    }\n\n\n    PaymentsUnsubscribe(idOrTag) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? { id } : { tag: idOrTag };\n        return this.gp.payments.unsubscribe(query)\n            .then((result) => {\n                if (result.success) {\n                    this.trigger('CallPaymentsUnsubscribeSuccess', idOrTag);\n                } else {\n                    this.trigger('CallPaymentsUnsubscribeError');\n                }\n            })\n            .catch((err) => {\n                console.warn(err);\n                this.trigger('CallPaymentsUnsubscribeError');\n            });\n    }\n\n\n    FullscreenOpen() {\n        return this.gp.fullscreen.open();\n    }\n    FullscreenClose() {\n        return this.gp.fullscreen.close();\n    }\n    FullscreenToggle() {\n        return this.gp.fullscreen.toggle();\n    }\n\n\n    // ADS \n    AdsShowFullscreen() {\n        return this.gp.ads.showFullscreen();\n    }\n    AdsShowRewarded(idOrTag) {\n        this.lastRewardedTag = idOrTag;\n        return this.gp.ads.showRewardedVideo();\n    }\n    AdsShowPreloader() {\n        return this.gp.ads.showPreloader();\n    }\n    AdsShowSticky() {\n        return this.gp.ads.showSticky();\n    }\n    AdsCloseSticky() {\n        return this.gp.ads.closeSticky();\n    }\n    AdsRefreshSticky() {\n        return this.gp.ads.refreshSticky();\n    }\n\n\n    AdsIsAdblockEnabled() {\n        return this.toUnity(this.gp.ads.isAdblockEnabled);\n    }\n\n    AdsIsStickyAvailable() {\n        return this.toUnity(this.gp.ads.isStickyAvailable);\n    }\n    AdsIsFullscreenAvailable() {\n        return this.toUnity(this.gp.ads.isFullscreenAvailable);\n    }\n    AdsIsRewardedAvailable() {\n        return this.toUnity(this.gp.ads.isRewardedAvailable);\n    }\n    AdsIsPreloaderAvailable() {\n        return this.toUnity(this.gp.ads.isPreloaderAvailable);\n    }\n\n\n    AdsIsStickyPlaying() {\n        return this.toUnity(this.gp.ads.isStickyPlaying);\n    }\n    AdsIsFullscreenPlaying() {\n        return this.toUnity(this.gp.ads.isFullscreenPlaying);\n    }\n    AdsIsRewardedPlaying() {\n        return this.toUnity(this.gp.ads.isRewardedPlaying);\n    }\n    AdsIsPreloaderPlaying() {\n        return this.toUnity(this.gp.ads.isPreloaderPlaying);\n    }\n\n    AdsIsCountdownOverlayEnabled() {\n        return this.toUnity(this.gp.ads.isCountdownOverlayEnabled);\n    }\n\n    AdsIsRewardedFailedOverlayEnabled() {\n        return this.toUnity(this.gp.ads.isRewardedFailedOverlayEnabled);\n    }\n\n    AdsCanShowFullscreenBeforeGamePlay() {\n        return this.toUnity(this.gp.ads.canShowFullscreenBeforeGamePlay);\n    }\n\n\n\n    // ANALYTICS \n    AnalyticsHit(url) {\n        return this.gp.analytics.hit(url);\n    }\n    AnalyticsGoal(event, value) {\n        return this.gp.analytics.goal(event, value);\n    }\n\n\n    /* SOCIAL */\n    SocialsShare(text, url, image) {\n        return this.gp.socials.share({ text, url, image });\n    }\n    SocialsPost(text, url, image) {\n        return this.gp.socials.post({ text, url, image });\n    }\n    SocialsInvite(text, url, image) {\n        return this.gp.socials.invite({ text, url, image });\n    }\n    SocialsJoinCommunity() {\n        return this.gp.socials.joinCommunity();\n    }\n    SocialsCommunityLink() {\n        return this.toUnity(this.gp.socials.communityLink);\n    }\n\n    SocialsIsSupportsShare() {\n        return this.toUnity(this.gp.socials.isSupportsShare);\n    }\n    SocialsIsSupportsNativeShare() {\n        return this.toUnity(this.gp.socials.isSupportsNativeShare);\n    }\n    SocialsIsSupportsNativePosts() {\n        return this.toUnity(this.gp.socials.isSupportsNativePosts);\n    }\n    SocialsIsSupportsNativeInvite() {\n        return this.toUnity(this.gp.socials.isSupportsNativeInvite);\n    }\n    SocialsCanJoinCommunity() {\n        return this.toUnity(this.gp.socials.canJoinCommunity);\n    }\n    SocialsIsSupportsNativeCommunityJoin() {\n        return this.toUnity(this.gp.socials.isSupportsNativeCommunityJoin);\n    }\n    \n    SocialsMakeShareLink(shareContent){\n        return this.toUnity(this.gp.socials.makeShareUrl({\n            fromId: this.gp.player.id,\n            content: shareContent,\n        }));\n    }\n    SocialsGetSharePlayerID(){\n        return this.toUnity(this.gp.socials.getShareParam('fromId'));\n    }\n    SocialsGetShareContent(){\n        return this.toUnity(this.gp.socials.getShareParam('content'));\n    }\n    \n\n\n    /* GAMES COLLECTIONS */\n    GamesCollectionsOpen(idOrTag) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? { id } : { tag: idOrTag || 'ANY' };\n        return this.gp.gamesCollections.open(query);\n    }\n    GamesCollectionsFetch(idOrTag) {\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? { id } : { tag: idOrTag };\n        return this.gp.gamesCollections\n            .fetch(query)\n            .then((result) => {\n                this.trigger('CallGamesCollectionsFetchTag', idOrTag);\n                this.trigger('CallGamesCollectionsFetch', JSON.stringify(result));\n\n            })\n            .catch((err) => {\n                console.warn(err);\n                this.trigger('CallGamesCollectionsFetchError');\n            });\n    }\n\n    ChangeLanguage(language) {\n        return this.gp.changeLanguage(language);\n    }\n    ChangeLanguageByCode(language = '') {\n        return this.gp.changeLanguage(language.toLowerCase());\n    }\n    ChangeAvatarGenerator(generator) {\n        return this.gp.changeAvatarGenerator(generator);\n    }\n    LoadOverlay() {\n        return this.gp.loadOverlay();\n    }\n\n    // GAME\n    IsPaused() {\n        return this.toUnity(this.gp.isPaused);\n    }\n\n    Pause() {\n        return this.gp.pause();\n    }\n    Resume() {\n        return this.gp.resume();\n    }\n\n    GameReady(){\n        return this.gp.gameStart();\n    }\n\n    GameplayStart() {\n        return this.gp.gameplayStart();\n    }\n    GameplayStop() {\n        return this.gp.gameplayStop();\n    }\n    \n    HappyTime(){\n        if(this.gp.platform.type == \"CRAZY_GAMES\")\n            this.gp.platform.getNativeSDK().game.happytime();  \n    }\n\n\n    // GAME\n\n\n    //Device\n    IsMobile() {\n        return this.toUnity(this.gp.isMobile);\n    }\n    IsPortrait() {\n        return this.toUnity(this.gp.isPortrait);\n    }\n    //Device\n\n\n    // Server\n    ServerTime() {\n        return this.toUnity(this.gp.serverTime);\n    }\n    // Server\n\n\n\n    // System\n    IsDev() {\n        return this.toUnity(this.gp.isDev);\n    }\n\n    IsAllowedOrigin() {\n        return this.toUnity(this.gp.isAllowedOrigin);\n    }\n    // System\n\n    // Variables\n    VariablesFetch() {\n        return this.gp.variables\n            .fetch()\n            .then((result) => {\n                this.trigger('CallVariablesFetchSuccess', JSON.stringify(result));\n            })\n            .catch((err) => {\n                console.warn(err);\n                this.trigger('CallVariablesFetchError');\n            });\n    }\n\n    VariablesHas(key) {\n        return this.toUnity(this.gp.variables.has(key));\n    }\n\n    VariablesGet(key) {\n        return this.toUnity(this.gp.variables.get(key));\n    }\n\n    VariablesIsPlatformVariablesAvailable(){\n        return this.toUnity(this.gp.variables.isPlatformVariablesAvailable);\n    }\n\n    VariablesFetchPlatformVariables(values){\n        //console.log(values);\n        if(values !== \"\"){\n            var params = values.split(',').map((o) => o.trim());\n            var map = {};\n            for (var i = 0; i < params.length; i++) {\n                var parts = params[i].split(':');\n                map[parts[0]] = parts[1].trim();\n                console.log(map[parts[0]]);\n            }\n            var options = \n            {\n                clientParams: map\n            };\n            //console.log(options);\n            this.gp.variables.fetchPlatformVariables(options);\n        }\n        else{\n            this.gp.variables.fetchPlatformVariables();\n        }\n    }\n    // Variables\n\n\n    // Players\n    PlayersFetch(key) {\n        var obj = JSON.parse(key);\n        let ids = [];\n\n        if (parseInt(obj, 10) > 0) {\n            ids = [parseInt(obj, 10)];\n        } else {\n            ids = (obj.idsList || obj.idsArray).map(Number).filter(Boolean)\n        }\n\n        this.gp.players.fetch({ ids })\n            .then((result) => {\n                this.trigger('CallPlayersFetchSuccess', JSON.stringify(result.players));\n            }).catch((err) => {\n                console.warn(err);\n                this.trigger('CallPlayersFetchError');\n            });\n    }\n    //Players\n\n\n    // Documents\n    DocumentsOpen() {\n        this.gp.documents.open({ type: 'PLAYER_PRIVACY_POLICY' });\n    }\n\n    DocumentsFetch() {\n        this.gp.documents.fetch({\n            type: 'PLAYER_PRIVACY_POLICY',\n            format: 'TXT'\n        });\n    }\n    // Documents\n\n\n    // Files\n    FilesUpload(tags) {\n        this.gp.files\n            .upload({\n                tags: tags\n                    .split(',')\n                    .map((o) => o.trim())\n                    .filter((f) => f),\n            })\n            .then((result) => {\n                this.trigger('CallFilesUploadSuccess', JSON.stringify(result));\n            })\n            .catch((err) => {\n                this.trigger('CallFilesUploadError');\n            });\n    }\n\n    FilesUploadUrl(url, filename, tags) {\n        this.gp.files\n            .uploadUrl({\n                url,\n                filename,\n                tags: tags\n                    .split(',')\n                    .map((o) => o.trim())\n                    .filter((f) => f),\n            })\n            .then((result) => {\n                this.trigger('CallFilesUploadUrlSuccess', JSON.stringify(result));\n            })\n            .catch((err) => {\n                this.trigger('CallFilesUploadUrlError');\n            });\n    }\n\n    FilesUploadContent(content, filename, tags) {\n        this.gp.files\n            .uploadContent({\n                content,\n                filename,\n                tags: tags\n                    .split(',')\n                    .map((o) => o.trim())\n                    .filter((f) => f),\n            })\n            .then((result) => {\n                this.trigger('CallFilesUploadContentSuccess', JSON.stringify(result));\n            })\n            .catch((err) => {\n                this.trigger('CallFilesUploadContentError');\n            });\n    }\n\n    FilesLoadContent(url) {\n        this.gp.files\n            .loadContent(url)\n            .then((result) => {\n                this.trigger('CallFilesLoadContentSuccess', result);\n            })\n            .catch((err) => {\n                this.trigger('CallFilesLoadContentError');\n            });\n    }\n\n    FilesChooseFile(type) {\n        this.gp.files\n            .chooseFile(type)\n            .then((result) => {\n                this.trigger('CallFilesChooseFile', result.tempUrl);\n            })\n            .catch((err) => {\n                this.trigger('CallFilesChooseFileError');\n            });\n    }\n\n    FilesFetch(filter) {\n        const query = JSON.parse(filter);\n        this.gp.files.fetch(query)\n            .then((result) => {\n                this.trigger('CallFilesFetchCanLoadMore', result.canLoadMore);\n                this.trigger('CallFilesFetchSuccess', JSON.stringify(result.items));\n            })\n            .catch((err) => {\n                this.trigger('CallFilesFetchError');\n            });\n    }\n\n    FilesFetchMore(filter) {\n        const query = JSON.parse(filter);\n        this.gp.files.fetchMore(query)\n            .then((result) => {\n                this.trigger('CallFilesFetchMoreCanLoadMore', result.canLoadMore);\n                this.trigger('CallFilesFetchMoreSuccess', JSON.stringify(result.items));\n            })\n            .catch((err) => {\n                this.trigger('CallFilesFetchMoreError');\n            });\n    }\n    // Files\n\n\n    // Channels\n    Channels_Open_Chat(channel_ID) {\n        if (channel_ID == -10) {\n            this.gp.channels.openChat();\n        }\n        else {\n            this.gp.channels.openChat({ channel_ID });\n        }\n    }\n    Channels_IsMainChatEnabled() {\n        return this.toUnity(this.gp.channels.isMainChatEnabled);\n    }\n\n    Channels_MainChatId() {\n        return this.gp.channels.mainChatId;\n    }\n\n    Channels_Join(channelId, password) {\n        this.gp.channels.join({ channelId, password, });\n    }\n\n    Channels_CancelJoin(channelId) {\n        this.gp.channels.cancelJoin({ channelId, });\n    }\n\n    Channels_Leave(channelId) {\n        this.gp.channels.leave({ channelId, });\n    }\n\n    Channels_Kick(channelId, playerId) {\n        this.gp.channels.kick({ channelId, playerId, });\n    }\n\n    Channels_Mute_UnmuteAt(channelId, playerId, unmuteAt) {\n        this.gp.channels.mute({ channelId, playerId, unmuteAt, });\n    }\n\n    Channels_Mute_Seconds(channelId, playerId, seconds) {\n        this.gp.channels.mute({ channelId, playerId, seconds: Number(seconds), });\n    }\n\n    Channels_UnMute(channelId, playerId) {\n        this.gp.channels.unmute({ channelId, playerId, });\n    }\n\n    Channels_SendInvite(channelId, playerId) {\n        this.gp.channels.sendInvite({ channelId, playerId, });\n    }\n\n    Channels_CancelInvite(channelId, playerId) {\n        this.gp.channels.cancelInvite({ channelId, playerId, });\n    }\n\n    Channels_AcceptInvite(channelId) {\n        this.gp.channels.acceptInvite({ channelId, });\n    }\n\n    Channels_RejectInvite(channelId) {\n        this.gp.channels.rejectInvite({ channelId });\n    }\n\n    Channels_FetchInvites(limit, offset) {\n        this.gp.channels.fetchInvites({ limit, offset, });\n    }\n\n    Channels_FetchMoreInvites(limit) {\n        this.gp.channels.fetchMoreInvites({ limit, });\n    }\n\n    Channels_FetchChannelInvites(channelId, limit, offset) {\n        this.gp.channels.fetchChannelInvites({ channelId, limit, offset, });\n    }\n\n    Channels_FetchMoreChannelInvites(channelId, limit) {\n        this.gp.channels.fetchMoreChannelInvites({ channelId, limit, });\n    }\n\n    Channels_FetchSentInvites(channelId, limit, offset) {\n        this.gp.channels.fetchSentInvites({ channelId, limit, offset, });\n    }\n\n    Channels_FetchMoreSentInvites(channelId, limit) {\n        this.gp.channels.fetchMoreSentInvites({ channelId, limit, });\n    }\n\n    Channels_AcceptJoinRequest(channelId, playerId) {\n        this.gp.channels.acceptJoinRequest({ channelId, playerId, });\n    }\n\n    Channels_RejectJoinRequest(channelId, playerId) {\n        this.gp.channels.rejectJoinRequest({ channelId, playerId, });\n    }\n\n    Channels_FetchJoinRequests(channelId, limit, offset) {\n        this.gp.channels.fetchJoinRequests({ channelId, limit, offset });\n    }\n\n    Channels_FetchMoreJoinRequests(channelId, limit) {\n        this.gp.channels.fetchMoreJoinRequests({ channelId, limit, });\n    }\n\n    Channels_FetchSentJoinRequests(channelId, limit, offset) {\n        this.gp.channels.fetchSentJoinRequests({ channelId, limit, offset, });\n    }\n\n    Channels_FetchMoreSentJoinRequests(channelId, limit) {\n        this.gp.channels.fetchMoreSentJoinRequests({ channelId, limit, });\n    }\n\n    Channels_SendMessage(channelId, text, tags) {\n        this.gp.channels.sendMessage({\n            channelId,\n            text,\n            tags: tags\n                .split(',')\n                .map((o) => o.trim())\n                .filter((f) => f),\n        });\n    }\n\n    Channels_SendPersonalMessage(playerId, text, tags) {\n        this.gp.channels.sendPersonalMessage({\n            playerId,\n            text,\n            tags: tags\n                .split(',')\n                .map((o) => o.trim())\n                .filter((f) => f),\n        });\n    }\n\n    Channels_SendFeedMessage(playerId, text, tags) {\n        this.gp.channels.sendFeedMessage({\n            playerId,\n            text,\n            tags: tags\n                .split(',')\n                .map((o) => o.trim())\n                .filter((f) => f),\n        });\n    }\n\n    Channels_EditMessage(messageId, text) {\n        this.gp.channels.editMessage({ messageId, text, });\n    }\n\n    Channels_DeleteMessage(messageId) {\n        this.gp.channels.deleteMessage({ messageId });\n    }\n\n    Channels_FetchMessages(channelId, tags, limit, offset) {\n        this.gp.channels.fetchMessages({\n            channelId,\n            tags: tags\n                .split(',')\n                .map((o) => o.trim())\n                .filter((f) => f),\n            limit,\n            offset,\n        }).then((result) => {\n            this.trigger('CallOnFetchMessagesCanLoadMore', JSON.stringify(result.canLoadMore));\n            this.trigger('CallOnFetchMessages', JSON.stringify(result.items));\n\n        }).catch((err) => {\n            console.warn(err);\n            this.trigger('CallOnFetchMessagesError');\n        });\n    }\n\n    Channels_FetchPersonalMessages(playerId, tags, limit, offset) {\n        this.gp.channels.fetchPersonalMessages({\n            playerId,\n            tags: tags\n                .split(',')\n                .map((o) => o.trim())\n                .filter((f) => f),\n            limit,\n            offset,\n        }).then((result) => {\n            this.trigger('CallOnFetchPersonalMessagesCanLoadMore', JSON.stringify(result.canLoadMore));\n            this.trigger('CallOnFetchPersonalMessages', JSON.stringify(result.items));\n        }).catch((err) => {\n            console.warn(err);\n            this.trigger('CallOnFetchPersonalMessagesError');\n        });\n    }\n\n    Channels_FetchFeedMessages(playerId, tags, limit, offset) {\n        this.gp.channels.fetchFeedMessages({\n            playerId,\n            tags: tags\n                .split(',')\n                .map((o) => o.trim())\n                .filter((f) => f),\n            limit,\n            offset,\n        }).then((result) => {\n            this.trigger('CallOnFetchFeedMessagesCanLoadMore', JSON.stringify(result.canLoadMore));\n            this.trigger('CallOnFetchFeedMessages', JSON.stringify(result.items));\n        }).catch((err) => {\n            console.warn(err);\n            this.trigger('CallOnFetchFeedMessagesError');\n        });\n    }\n\n    Channels_FetchMoreMessages(channelId, tags, limit) {\n        this.gp.channels.fetchMoreMessages({\n            channelId,\n            tags: tags\n                .split(',')\n                .map((o) => o.trim())\n                .filter((f) => f),\n            limit,\n        }).then((result) => {\n            this.trigger('CallOnFetchMoreMessagesCanLoadMore', result.canLoadMore);\n            this.trigger('CallOnFetchMoreMessages', JSON.stringify(result.items));\n        }).catch((err) => {\n            console.warn(err);\n            this.trigger('CallOnFetchMoreMessagesError');\n        });\n    }\n\n    Channels_FetchMorePersonalMessages(playerId, tags, limit) {\n        this.gp.channels.fetchMorePersonalMessages({\n            playerId,\n            tags: tags\n                .split(',')\n                .map((o) => o.trim())\n                .filter((f) => f),\n            limit,\n        }).then((result) => {\n            this.trigger('CallOnFetchMorePersonalMessagesCanLoadMore', result.canLoadMore);\n            this.trigger('CallOnFetchMorePersonalMessages', JSON.stringify(result.items));\n        }).catch((err) => {\n            console.warn(err);\n            this.trigger('CallOnFetchMorePersonalMessagesError');\n        });\n    }\n\n    Channels_FetchMoreFeedMessages(playerId, tags, limit) {\n        this.gp.channels.fetchMoreFeedMessages({\n            playerId,\n            tags: tags\n                .split(',')\n                .map((o) => o.trim())\n                .filter((f) => f),\n            limit,\n        }).then((result) => {\n            this.trigger('CallOnFetchMoreFeedMessagesCanLoadMore', result.canLoadMore);\n            this.trigger('CallOnFetchMoreFeedMessages', JSON.stringify(result.items));\n        }).catch((err) => {\n            console.warn(err);\n            this.trigger('CallOnFetchMoreFeedMessagesError');\n        });\n    }\n\n    Channels_DeleteChannel(channelId) {\n        this.gp.channels.deleteChannel({ channelId, });\n    }\n\n    Channels_FetchChannel(channelId) {\n        this.gp.channels.fetchChannel({ channelId, });\n    }\n\n    Channels_CreateChannel(filter) {\n        const query = JSON.parse(filter);\n        this.gp.channels.createChannel({ ...query, private: query.ch_private });\n    }\n\n    Channels_UpdateChannel(filter) {\n        const query = JSON.parse(filter);\n        this.gp.channels.updateChannel({ ...query, private: query.ch_private });\n    }\n\n    Channels_FetchChannels(filter) {\n        const query = JSON.parse(filter);\n        this.gp.channels.fetchChannels(query);\n    }\n\n    Channels_FetchMoreChannels(filter) {\n        const query = JSON.parse(filter);\n        this.gp.channels.fetchMoreChannels(query);\n    }\n\n    Channels_FetchMembers(filter) {\n        const query = JSON.parse(filter);\n        this.gp.channels.fetchMembers(query);\n    }\n\n    Channels_FetchMoreMembers(filter) {\n        const query = JSON.parse(filter);\n        this.gp.channels.fetchMoreMembers(query);\n    }\n    // Channels\n\n\n    // Triggers\n    Triggers_Claim(idOrTag){\n        try {\n            this.gp.triggers.claim({id : idOrTag}); \n        } catch (error) {\n            console.warn(error);\n            try {\n                this.gp.triggers.claim({tag : idOrTag}); \n            } catch (error) {\n                console.warn(error);\n            }\n        }\n    }\n\n    Triggers_List(){\n        return this.toUnity(this.gp.triggers.list);\n    }\n\n    Triggers_ActivatedList(){\n        return this.toUnity(this.gp.triggers.activatedList);\n    }\n\n    Triggers_GetTrigger(idOrTag){\n        return this.toUnity(this.gp.triggers.getTrigger(idOrTag));\n    }\n\n    Triggers_IsActivated(idOrTag){\n        return this.toUnity(this.gp.triggers.isActivated(idOrTag));\n    }\n\n    Triggers_IsClaimed(idOrTag){\n        return this.toUnity(this.gp.triggers.isClaimed(idOrTag));\n    }\n    // Triggers\n\n    // Events\n\n    Events_Join(idOrTag){\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? { id } : { tag: idOrTag };\n        this.gp.events.join(query); \n    }\n\n    Events_List(){\n        return this.toUnity(this.gp.events.list);\n    }\n\n    Events_ActiveList(){\n        return this.toUnity(this.gp.events.activeList);\n    }\n\n    Events_GetEvent(idOrTag){\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ?  id  : idOrTag;\n        const result = this.toUnity(this.gp.events.getEvent(query).event);\n        return result;\n    }\n\n    Events_IsActive(idOrTag){\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ?  id  : idOrTag;\n        const result = this.gp.events.has(query);\n        return this.toUnity(result);\n    }\n\n    Events_IsJoined(idOrTag){\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ?  id  : idOrTag;\n        const result = this.toUnity(this.gp.events.isJoined(query));\n        return result;\n    }\n    // Events\n\n    // Segments\n    Segments_List(){\n        return this.toUnity(this.gp.segments.list);\n    }\n    Segments_Has(tag){\n        return this.toUnity(this.gp.segments.has(tag));\n    }\n    // Segments\n\n    // Experiments\n    Experiments_Map(){\n        return this.toUnity(this.gp.experiments.map);\n    }\n    Experiments_Has(tag, cohort){\n        return this.toUnity(this.gp.experiments.has(tag, cohort));\n    }\n    // Experiments\n\n    //Rewards\n    Rewards_Give(idOrTag, lazy){\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ?  { id: id } : { tag: idOrTag };\n        //console.log(query);\n        this.gp.rewards.give({...query, lazy : lazy})\n        .then((result) => {\n            this.trigger('CallOnRewardsGive', JSON.stringify(result));\n        })\n        .catch((err) => {\n            this.trigger('CallOnRewardsGiveError', err);\n        });\n    }\n\n    Rewards_Accept(idOrTag){\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ?  { id: id } : { tag: idOrTag };\n        this.gp.rewards.accept({...query})\n        .then((result) => {\n            this.trigger('CallOnRewardsAccept', JSON.stringify(result));\n        })\n        .catch((err) => {\n            this.trigger('CallOnRewardsAcceptError', err);\n        });\n    }\n\n    Rewards_List(){\n        return this.toUnity(this.gp.rewards.list);\n    }\n\n    Rewards_GivenList(){\n        return this.toUnity(this.gp.rewards.givenList);\n    }\n\n    Rewards_GetReward(idOrTag){\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ?  id  : idOrTag;\n        const result = this.toUnity(this.gp.rewards.getReward(query));\n        return result;\n    }\n\n    Rewards_Has(idOrTag){\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ?  id  : idOrTag;\n        return this.toUnity(this.gp.rewards.has(query));\n    }\n\n    Rewards_HasAccepted(idOrTag){\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ?  id  : idOrTag;\n        return this.toUnity(this.gp.rewards.hasAccepted(query));\n    }\n\n    Rewards_HasUnaccepted(idOrTag){\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ?  id  : idOrTag;\n        return this.toUnity(this.gp.rewards.hasUnaccepted(query));\n    }\n    //Rewards\n\n    //Schedulers\n    Schedulers_Register(idOrTag){\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ? { id: id } : { tag: idOrTag };\n        this.gp.schedulers.register(query); \n    }\n\n    Schedulers_ClaimDay(idOrTag, day){\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ?  id  : idOrTag;\n\n        console.log(query);\n        console.log(day);\n\n        this.gp.schedulers.claimDay(query, day);\n    }\n\n    Schedulers_ClaimDayAdditional(idOrTag, day, triggerIdOrTag){\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ?  id  : idOrTag;\n\n        const triggerId = parseInt(triggerIdOrTag, 10) || 0;\n        const triggerQuery = triggerId > 0 ?  triggerId  : triggerIdOrTag;\n\n        console.log(query);\n        console.log(day);\n        console.log(triggerQuery);\n\n        this.gp.schedulers.claimDayAdditional(query, day, triggerQuery);\n    }\n\n    Schedulers_ClaimAllDay(idOrTag, day){\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ?  id  : idOrTag;\n        console.log(query);\n        console.log(day);\n        this.gp.schedulers.claimAllDay(query, day);\n    }\n\n    Schedulers_ClaimAllDays(idOrTag){\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ?  id  : idOrTag;\n        console.log(query);\n        this.gp.schedulers.claimAllDays(query);\n    }\n\n    Schedulers_List(){\n        const list = this.gp.schedulers.list;\n        console.log(list);\n        return this.toUnity(list);\n    }\n\n    Schedulers_ActiveList(){\n        const list = this.gp.schedulers.activeList;\n        console.log(list);\n        return this.toUnity(list);\n    }\n\n    Schedulers_GetScheduler(idOrTag){\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ?  id  : idOrTag;\n        console.log(query);\n        const result = this.toUnity(this.gp.schedulers.getScheduler(query));\n        console.log(result);\n        return result;\n    }\n\n    Schedulers_GetSchedulerDay(idOrTag, day){\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ?  id  : idOrTag;\n        console.log(query);\n        console.log(day);\n        const result = this.toUnity(this.gp.schedulers.getSchedulerDay(query, day));\n        console.log(result);\n        return result;\n    }\n\n    Schedulers_GetSchedulerCurrentDay(idOrTag){\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ?  id  : idOrTag;\n        console.log(query);\n        const result = this.toUnity(this.gp.schedulers.getSchedulerCurrentDay(query));\n        console.log(result);\n        return result;\n    }\n\n    Schedulers_IsRegistered(idOrTag){\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ?  id  : idOrTag;\n        const result = this.gp.schedulers.isRegistered(query);\n        console.log(result);\n        return this.toUnity(result);\n    }\n\n    Schedulers_IsTodayRewardClaimed(idOrTag){\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ?  id  : idOrTag;\n        const result = this.gp.schedulers.isTodayRewardClaimed(query);\n        console.log(result);\n        return this.toUnity(result);\n    }\n\n    Schedulers_CanClaimDay(idOrTag, day){\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ?  id  : idOrTag;\n        const result = this.gp.schedulers.canClaimDay(query, day);\n        console.log(result);\n        return this.toUnity(result);\n    }\n\n    Schedulers_CanClaimDayAdditional(idOrTag, day, triggerIdOrTag){\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ?  id  : idOrTag;\n        const triggerId = parseInt(triggerIdOrTag, 10) || 0;\n        const triggerQuery = triggerId > 0 ?  triggerId  : triggerIdOrTag;\n\n        const result = this.gp.schedulers.canClaimDayAdditional(query, day, triggerQuery);\n        console.log(result);\n        return this.toUnity(result);\n    }\n\n    Schedulers_CanClaimAllDay(idOrTag, day){\n        const id = parseInt(idOrTag, 10) || 0;\n        const query = id > 0 ?  id  : idOrTag;\n        const result = this.gp.schedulers.canClaimAllDay(query, day);\n        console.log(result);\n        return this.toUnity(result);\n    }\n\n    //Schedulers\n\n    // Custom\n    CustomCall(name, args) {\n        let callFunc = \"GamePush.\" + name;\n\n        if(args == null)\n            window.executeFunctionByName(callFunc, window);\n        else{\n            let argArray = args.replace(/\\s/g, '').split(',');\n\n            window.executeFunctionByName(callFunc, window, ...argArray);\n        }\n    }\n\n    CustomReturn(name, args) {\n        let callFunc = \"GamePush.\" + name;\n\n        let value; \n        if(args == null)\n            value = window.executeFunctionByName(callFunc, window);\n        else{\n            args = args.replace(/\\s/g, '');\n            let argArray = args.split(',');\n\n            value = window.executeFunctionByName(callFunc, window, ...argArray);\n        }\n       \n        return formatCustomValue(value);\n    }\n\n    CustomGetValue(name){ \n        let valueName = \"GamePush.\" + name;\n        let value = window.returnValueByName(valueName, window);\n\n        return formatCustomValue(value);\n    }\n\n    CustomAsyncReturn(name, args) {\n        let callFunc = \"GamePush.\" + name;\n\n        if(args != null) args = args.replace(/\\s/g, '').split(',');\n\n        try {\n        window.executeFunctionByName(callFunc, window, ...args)\n        .then((result) => {\n            this.trigger('CallCustomAsyncReturn', formatCustomValue(result));\n        })\n        .catch((err) => {\n            console.warn(err);\n            this.trigger('CallCustomAsyncError', err);\n        });\n        } catch (error) {\n            console.warn(error);\n        }\n        \n    }\n    //Custom\n}\n\nfunction formatCustomValue(value){\n    switch (typeof (value)) {\n        case 'boolean':{\n            return String(value);\n        }\n        case 'number': {\n            return String(value);\n        }\n        case 'object': {\n            return JSON.stringify(value);\n        }\n        case 'undefined':{\n            return \"undefined\";\n        }\n        case 'function':{\n            return \"value is a function\";\n        }\n    }\n    return value;\n}\n\nfunction mapChannel(channel = {}) {\n    return {\n        ...channel,\n        ch_private: channel.private\n    };\n}\n\nfunction mapItemWithChannel(item = {}) {\n    return {\n        ...item,\n        channel: mapChannel(item.channel)\n    };\n}\n\n\nwindow.executeFunctionByName = function(functionName, context /*, args*/) {\n    var args = Array.prototype.slice.call(arguments, 2);\n    args = args.map(element => {\n        try{\n            //console.log(\"try parse \" + element);\n            return JSON.parse(element);\n        }\n        catch(error){\n            //console.log(\"catch \" + error);\n            return element\n        }\n    });\n    //console.log(args);\n    var namespaces = functionName.split(\".\");\n    var func = namespaces.pop();\n\n    for(var i = 0; i < namespaces.length; i++) {\n      context = context[namespaces[i]];\n    }\n    try {\n        var execute = context[func].apply(context, args);\n    } catch (error) {\n        console.warn(error);\n        return null;\n    }\n\n    return execute;\n}\n\nwindow.returnValueByName = function(functionName, context) {\n    var namespaces = functionName.split(\".\");\n    var func = namespaces.pop();\n    for(var i = 0; i < namespaces.length; i++) {\n      context = context[namespaces[i]];\n    }\n\n    try {\n        var value = context[func];\n    } catch (error) {\n        console.warn(error);\n        return error;\n    }\n    console.log(value);\n    return value;\n}\n\nwindow.GamePushUnity = GamePushUnity;\n","import GamePushUnity from './GamePushUnity'\n\nwindow.GamePushUnity = GamePushUnity;\n"],"names":["GamePushUnity","constructor","gp","this","player","on","trigger","success","JSON","stringify","fields","map","field","defaultValue","default","leaderboard","achievements","window","focus","achievement","error","gamesCollections","fullscreen","ads","lastRewardedTag","socials","lang","ag","documents","document","content","channels","channel","mapChannel","err","id","result","canLoadMore","items","member","joinRequest","memberLeave","mute","invite","mapItemWithChannel","message","triggers","events","event","playerEvent","segments","segmentTag","schedulers","schedulerInfo","schedulerDayInfo","scheduler","playerScheduler","variables","eventName","value","unityInstance","SendMessage","toUnity","getQuery","idOrTag","parseInt","query","tag","String","mapItemsWithChannel","ch_private","private","Language","language","AvatarGenerator","avatarGenerator","PlatformType","platform","type","PlatformHasIntegratedAuth","hasIntegratedAuth","PlatformIsExternalLinksAllowed","isExternalLinksAllowed","AppTitle","app","title","AppDescription","description","AppImage","image","AppUrl","url","AppRequestReview","requestReview","then","rating","AppCanRequestReview","canRequestReview","AppIsAlreadyReviewed","isAlreadyReviewed","AppAddShortcut","addShortcut","AppCanAddShortcut","canAddShortcut","PlayerGetID","PlayerGetScore","score","PlayerSetScore","Number","PlayerAddScore","PlayerGetName","name","PlayerSetName","PlayerGetAvatar","avatar","PlayerSetAvatar","src","PlayerGet","key","get","PlayerSetString","set","PlayerSetNumber","PlayerSetBool","PlayerAdd","add","PlayerHas","has","PlayerSetFlag","Boolean","PlayerToggle","toggle","PlayerGetFieldName","getFieldName","PlayerGetFieldVariantName","getFieldVariantName","PlayerGetFieldVariantAt","index","variant","getField","variants","PlayerGetFieldVariantIndex","findIndex","v","PlayerReset","reset","PlayerRemove","remove","PlayerSync","override","sync","PlayerLoad","load","PlayerLogin","login","PlayerFetchFields","fetchFields","PlayerIsLoggedIn","isLoggedIn","PlayerHasAnyCredentials","hasAnyCredentials","PlayerIsStub","isStub","PlayerGetActiveDays","stats","activeDays","PlayerGetActiveDaysConsecutive","activeDaysConsecutive","PlayerGetPlaytimeToday","playtimeToday","PlayerGetPlaytimeAll","playtimeAll","LeaderboardOpen","orderBy","order","limit","showNearest","withMe","includeFields","displayFields","open","split","o","trim","filter","f","catch","console","warn","LeaderboardFetch","fetch","leaderboardInfo","players","topPlayers","abovePlayers","belowPlayers","LeaderboardFetchPlayerRating","fetchPlayerRating","position","LeaderboardScopedOpen","openScoped","LeaderboardScopedFetch","fetchScoped","leaderboardScopedInfo","LeaderboardScopedPublishRecord","key1","value1","key2","value2","key3","value3","publishRecord","record","LeaderboardScopedFetchPlayerRating","fetchPlayerRatingScoped","AchievementsOpen","AchievementsFetch","achievementsGroups","playerAchievements","AchievementsUnlock","unlock","AchievementsSetProgress","progress","setProgress","AchievementsHas","AchievementsGetProgress","getProgress","PaymentsFetchProducts","payments","fetchProducts","products","playerPurchases","PaymentsPurchase","purchase","PaymentsConsume","consume","PaymentsIsAvailable","isAvailable","PaymentsIsSubscriptionsAvailable","isSubscriptionsAvailable","PaymentsSubscribe","subscribe","PaymentsUnsubscribe","unsubscribe","FullscreenOpen","FullscreenClose","close","FullscreenToggle","AdsShowFullscreen","showFullscreen","AdsShowRewarded","showRewardedVideo","AdsShowPreloader","showPreloader","AdsShowSticky","showSticky","AdsCloseSticky","closeSticky","AdsRefreshSticky","refreshSticky","AdsIsAdblockEnabled","isAdblockEnabled","AdsIsStickyAvailable","isStickyAvailable","AdsIsFullscreenAvailable","isFullscreenAvailable","AdsIsRewardedAvailable","isRewardedAvailable","AdsIsPreloaderAvailable","isPreloaderAvailable","AdsIsStickyPlaying","isStickyPlaying","AdsIsFullscreenPlaying","isFullscreenPlaying","AdsIsRewardedPlaying","isRewardedPlaying","AdsIsPreloaderPlaying","isPreloaderPlaying","AdsIsCountdownOverlayEnabled","isCountdownOverlayEnabled","AdsIsRewardedFailedOverlayEnabled","isRewardedFailedOverlayEnabled","AdsCanShowFullscreenBeforeGamePlay","canShowFullscreenBeforeGamePlay","AnalyticsHit","analytics","hit","AnalyticsGoal","goal","SocialsShare","text","share","SocialsPost","post","SocialsInvite","SocialsJoinCommunity","joinCommunity","SocialsCommunityLink","communityLink","SocialsIsSupportsShare","isSupportsShare","SocialsIsSupportsNativeShare","isSupportsNativeShare","SocialsIsSupportsNativePosts","isSupportsNativePosts","SocialsIsSupportsNativeInvite","isSupportsNativeInvite","SocialsCanJoinCommunity","canJoinCommunity","SocialsIsSupportsNativeCommunityJoin","isSupportsNativeCommunityJoin","SocialsMakeShareLink","shareContent","makeShareUrl","fromId","SocialsGetSharePlayerID","getShareParam","SocialsGetShareContent","GamesCollectionsOpen","GamesCollectionsFetch","ChangeLanguage","changeLanguage","ChangeLanguageByCode","toLowerCase","ChangeAvatarGenerator","generator","changeAvatarGenerator","LoadOverlay","loadOverlay","IsPaused","isPaused","Pause","pause","Resume","resume","GameReady","gameStart","GameplayStart","gameplayStart","GameplayStop","gameplayStop","HappyTime","getNativeSDK","game","happytime","IsMobile","isMobile","IsPortrait","isPortrait","ServerTime","serverTime","IsDev","isDev","IsAllowedOrigin","isAllowedOrigin","VariablesFetch","VariablesHas","VariablesGet","VariablesIsPlatformVariablesAvailable","isPlatformVariablesAvailable","VariablesFetchPlatformVariables","values","params","i","length","parts","log","options","clientParams","fetchPlatformVariables","PlayersFetch","obj","parse","ids","idsList","idsArray","DocumentsOpen","DocumentsFetch","format","FilesUpload","tags","files","upload","FilesUploadUrl","filename","uploadUrl","FilesUploadContent","uploadContent","FilesLoadContent","loadContent","FilesChooseFile","chooseFile","tempUrl","FilesFetch","FilesFetchMore","fetchMore","Channels_Open_Chat","channel_ID","openChat","Channels_IsMainChatEnabled","isMainChatEnabled","Channels_MainChatId","mainChatId","Channels_Join","channelId","password","join","Channels_CancelJoin","cancelJoin","Channels_Leave","leave","Channels_Kick","playerId","kick","Channels_Mute_UnmuteAt","unmuteAt","Channels_Mute_Seconds","seconds","Channels_UnMute","unmute","Channels_SendInvite","sendInvite","Channels_CancelInvite","cancelInvite","Channels_AcceptInvite","acceptInvite","Channels_RejectInvite","rejectInvite","Channels_FetchInvites","offset","fetchInvites","Channels_FetchMoreInvites","fetchMoreInvites","Channels_FetchChannelInvites","fetchChannelInvites","Channels_FetchMoreChannelInvites","fetchMoreChannelInvites","Channels_FetchSentInvites","fetchSentInvites","Channels_FetchMoreSentInvites","fetchMoreSentInvites","Channels_AcceptJoinRequest","acceptJoinRequest","Channels_RejectJoinRequest","rejectJoinRequest","Channels_FetchJoinRequests","fetchJoinRequests","Channels_FetchMoreJoinRequests","fetchMoreJoinRequests","Channels_FetchSentJoinRequests","fetchSentJoinRequests","Channels_FetchMoreSentJoinRequests","fetchMoreSentJoinRequests","Channels_SendMessage","sendMessage","Channels_SendPersonalMessage","sendPersonalMessage","Channels_SendFeedMessage","sendFeedMessage","Channels_EditMessage","messageId","editMessage","Channels_DeleteMessage","deleteMessage","Channels_FetchMessages","fetchMessages","Channels_FetchPersonalMessages","fetchPersonalMessages","Channels_FetchFeedMessages","fetchFeedMessages","Channels_FetchMoreMessages","fetchMoreMessages","Channels_FetchMorePersonalMessages","fetchMorePersonalMessages","Channels_FetchMoreFeedMessages","fetchMoreFeedMessages","Channels_DeleteChannel","deleteChannel","Channels_FetchChannel","fetchChannel","Channels_CreateChannel","createChannel","Channels_UpdateChannel","updateChannel","Channels_FetchChannels","fetchChannels","Channels_FetchMoreChannels","fetchMoreChannels","Channels_FetchMembers","fetchMembers","Channels_FetchMoreMembers","fetchMoreMembers","Triggers_Claim","claim","Triggers_List","list","Triggers_ActivatedList","activatedList","Triggers_GetTrigger","getTrigger","Triggers_IsActivated","isActivated","Triggers_IsClaimed","isClaimed","Events_Join","Events_List","Events_ActiveList","activeList","Events_GetEvent","getEvent","Events_IsActive","Events_IsJoined","isJoined","Segments_List","Segments_Has","Experiments_Map","experiments","Experiments_Has","cohort","Rewards_Give","lazy","rewards","give","Rewards_Accept","accept","Rewards_List","Rewards_GivenList","givenList","Rewards_GetReward","getReward","Rewards_Has","Rewards_HasAccepted","hasAccepted","Rewards_HasUnaccepted","hasUnaccepted","Schedulers_Register","register","Schedulers_ClaimDay","day","claimDay","Schedulers_ClaimDayAdditional","triggerIdOrTag","triggerId","triggerQuery","claimDayAdditional","Schedulers_ClaimAllDay","claimAllDay","Schedulers_ClaimAllDays","claimAllDays","Schedulers_List","Schedulers_ActiveList","Schedulers_GetScheduler","getScheduler","Schedulers_GetSchedulerDay","getSchedulerDay","Schedulers_GetSchedulerCurrentDay","getSchedulerCurrentDay","Schedulers_IsRegistered","isRegistered","Schedulers_IsTodayRewardClaimed","isTodayRewardClaimed","Schedulers_CanClaimDay","canClaimDay","Schedulers_CanClaimDayAdditional","canClaimDayAdditional","Schedulers_CanClaimAllDay","canClaimAllDay","CustomCall","args","callFunc","executeFunctionByName","argArray","replace","CustomReturn","formatCustomValue","CustomGetValue","valueName","returnValueByName","CustomAsyncReturn","item","functionName","context","Array","prototype","slice","call","arguments","element","namespaces","func","pop","execute","apply"],"sourceRoot":""}